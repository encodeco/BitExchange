// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Trading.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Be {

  /// <summary>Holder for reflection information generated from Trading.proto</summary>
  public static partial class TradingReflection {

    #region Descriptor
    /// <summary>File descriptor for Trading.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TradingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1UcmFkaW5nLnByb3RvEgJiZSIHCgVFbXB0eSIVCghOdW1TdGVwcxIJCgFu",
            "GAEgASgFIhUKCFBvc2l0aW9uEgkKAXgYASABKAUigwEKDk1hdGNoaW5nUmVz",
            "dWx0EhEKCXRpbWVzdGFtcBgBIAEoDRIZCgZvcmRlcnMYAiADKAsyCS5iZS5P",
            "cmRlchIhCgpleGVjdXRpb25zGAMgAygLMg0uYmUuRXhlY3V0aW9uEiAKCW9y",
            "ZGVyYm9vaxgEIAEoCzINLmJlLk9yZGVyQm9vayJOCglFeGVjdXRpb24SDQoF",
            "cHJpY2UYAiABKAQSEAoIcXVhbnRpdHkYAyABKA0SEgoKb3JkZXJfc2lkZRgE",
            "IAEoDBIMCgRyb2xlGAUgASgMIoMBCgVPcmRlchIRCgl0aW1lc3RhbXAYASAB",
            "KA0SEAoIcXVhbnRpdHkYAiABKA0SDQoFcHJpY2UYAyABKAQSEAoIb3JkZXJf",
            "aWQYBCABKAQSEQoJdHJhZGVyX2lkGAUgASgNEiEKCm9yZGVyX2xpc3QYBiAB",
            "KAsyDS5iZS5PcmRlckxpc3QiSQoFUXVvdGUSEgoKb3JkZXJfdHlwZRgBIAEo",
            "DBISCgpvcmRlcl9zaWRlGAIgASgMEhgKBW9yZGVyGAMgASgLMgkuYmUuT3Jk",
            "ZXIiNgoJUXVvdGVMaXN0EhkKBnF1b3RlcxgBIAMoCzIJLmJlLlF1b3RlEg4K",
            "BnZvbHVtbhgCIAEoBCI2CglPcmRlckxpc3QSGQoGb3JkZXJzGAEgAygLMgku",
            "YmUuT3JkZXISDgoGdm9sdW1uGAIgASgEIjIKDU9yZGVyQm9va0xpc3QSIQoK",
            "b3JkZXJib29rcxgBIAMoCzINLmJlLk9yZGVyQm9vayJNCglPcmRlckJvb2sS",
            "HwoIYmlkX3RyZWUYASABKAsyDS5iZS5PcmRlclRyZWUSHwoIYXNrX3RyZWUY",
            "AiABKAsyDS5iZS5PcmRlclRyZWUiwAIKCU9yZGVyVHJlZRIuCglwcmljZV9t",
            "YXAYASADKAsyGy5iZS5PcmRlclRyZWUuUHJpY2VNYXBFbnRyeRIuCglvcmRl",
            "cl9tYXAYAiADKAsyGy5iZS5PcmRlclRyZWUuT3JkZXJNYXBFbnRyeRIOCgZ2",
            "b2x1bW4YAyABKAQSEQoJbWluX3ByaWNlGAQgASgEEhEKCW1heF9wcmljZRgF",
            "IAEoBBISCgpudW1fb3JkZXJzGAcgASgEEg0KBWRlcHRoGAYgASgNGj4KDVBy",
            "aWNlTWFwRW50cnkSCwoDa2V5GAEgASgEEhwKBXZhbHVlGAIgASgLMg0uYmUu",
            "T3JkZXJMaXN0OgI4ARo6Cg1PcmRlck1hcEVudHJ5EgsKA2tleRgBIAEoBBIY",
            "CgV2YWx1ZRgCIAEoCzIJLmJlLk9yZGVyOgI4ATJfCg5NeVJhbmRvbVdhbGtl",
            "chIjCgZVcGRhdGUSDC5iZS5OdW1TdGVwcxoJLmJlLkVtcHR5IgASKAoLR2V0",
            "UG9zaXRpb24SCS5iZS5FbXB0eRoMLmJlLlBvc2l0aW9uIgAymAEKB1RyYWRp",
            "bmcSKgoQUXVvdGVVcGRhdGVBc3luYxIJLmJlLlF1b3RlGgkuYmUuRW1wdHki",
            "ABIyCg9RdW90ZVVwZGF0ZVN5bmMSCS5iZS5RdW90ZRoSLmJlLk1hdGNoaW5n",
            "UmVzdWx0IgASLQoPT3JkZXJCb29rVXBkYXRlEgkuYmUuRW1wdHkaDS5iZS5P",
            "cmRlckJvb2siAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.Empty), global::Be.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.NumSteps), global::Be.NumSteps.Parser, new[]{ "N" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.Position), global::Be.Position.Parser, new[]{ "X" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.MatchingResult), global::Be.MatchingResult.Parser, new[]{ "Timestamp", "Orders", "Executions", "Orderbook" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.Execution), global::Be.Execution.Parser, new[]{ "Price", "Quantity", "OrderSide", "Role" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.Order), global::Be.Order.Parser, new[]{ "Timestamp", "Quantity", "Price", "OrderId", "TraderId", "OrderList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.Quote), global::Be.Quote.Parser, new[]{ "OrderType", "OrderSide", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.QuoteList), global::Be.QuoteList.Parser, new[]{ "Quotes", "Volumn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.OrderList), global::Be.OrderList.Parser, new[]{ "Orders", "Volumn" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.OrderBookList), global::Be.OrderBookList.Parser, new[]{ "Orderbooks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.OrderBook), global::Be.OrderBook.Parser, new[]{ "BidTree", "AskTree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Be.OrderTree), global::Be.OrderTree.Parser, new[]{ "PriceMap", "OrderMap", "Volumn", "MinPrice", "MaxPrice", "NumOrders", "Depth" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NumSteps : pb::IMessage<NumSteps> {
    private static readonly pb::MessageParser<NumSteps> _parser = new pb::MessageParser<NumSteps>(() => new NumSteps());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumSteps> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumSteps() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumSteps(NumSteps other) : this() {
      n_ = other.n_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumSteps Clone() {
      return new NumSteps(this);
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 1;
    private int n_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumSteps);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumSteps other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (N != other.N) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (N != 0) hash ^= N.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (N != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(N);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (N != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(N);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumSteps other) {
      if (other == null) {
        return;
      }
      if (other.N != 0) {
        N = other.N;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            N = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Position : pb::IMessage<Position> {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position(Position other) : this() {
      x_ = other.x_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 
  /// </summary>
  public sealed partial class MatchingResult : pb::IMessage<MatchingResult> {
    private static readonly pb::MessageParser<MatchingResult> _parser = new pb::MessageParser<MatchingResult>(() => new MatchingResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MatchingResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingResult(MatchingResult other) : this() {
      timestamp_ = other.timestamp_;
      orders_ = other.orders_.Clone();
      executions_ = other.executions_.Clone();
      orderbook_ = other.orderbook_ != null ? other.orderbook_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MatchingResult Clone() {
      return new MatchingResult(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private uint timestamp_;
    /// <summary>
    /// 업데이트된 오더들
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Be.Order> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(18, global::Be.Order.Parser);
    private readonly pbc::RepeatedField<global::Be.Order> orders_ = new pbc::RepeatedField<global::Be.Order>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Be.Order> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "executions" field.</summary>
    public const int ExecutionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Be.Execution> _repeated_executions_codec
        = pb::FieldCodec.ForMessage(26, global::Be.Execution.Parser);
    private readonly pbc::RepeatedField<global::Be.Execution> executions_ = new pbc::RepeatedField<global::Be.Execution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Be.Execution> Executions {
      get { return executions_; }
    }

    /// <summary>Field number for the "orderbook" field.</summary>
    public const int OrderbookFieldNumber = 4;
    private global::Be.OrderBook orderbook_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Be.OrderBook Orderbook {
      get { return orderbook_; }
      set {
        orderbook_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MatchingResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MatchingResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if(!orders_.Equals(other.orders_)) return false;
      if(!executions_.Equals(other.executions_)) return false;
      if (!object.Equals(Orderbook, other.Orderbook)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      hash ^= orders_.GetHashCode();
      hash ^= executions_.GetHashCode();
      if (orderbook_ != null) hash ^= Orderbook.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Timestamp);
      }
      orders_.WriteTo(output, _repeated_orders_codec);
      executions_.WriteTo(output, _repeated_executions_codec);
      if (orderbook_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Orderbook);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      size += orders_.CalculateSize(_repeated_orders_codec);
      size += executions_.CalculateSize(_repeated_executions_codec);
      if (orderbook_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orderbook);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MatchingResult other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      orders_.Add(other.orders_);
      executions_.Add(other.executions_);
      if (other.orderbook_ != null) {
        if (orderbook_ == null) {
          orderbook_ = new global::Be.OrderBook();
        }
        Orderbook.MergeFrom(other.Orderbook);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 18: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 26: {
            executions_.AddEntriesFrom(input, _repeated_executions_codec);
            break;
          }
          case 34: {
            if (orderbook_ == null) {
              orderbook_ = new global::Be.OrderBook();
            }
            input.ReadMessage(orderbook_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Execution : pb::IMessage<Execution> {
    private static readonly pb::MessageParser<Execution> _parser = new pb::MessageParser<Execution>(() => new Execution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Execution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Execution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Execution(Execution other) : this() {
      price_ = other.price_;
      quantity_ = other.quantity_;
      orderSide_ = other.orderSide_;
      role_ = other.role_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Execution Clone() {
      return new Execution(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private ulong price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 3;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 4;
    private pb::ByteString orderSide_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private pb::ByteString role_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Execution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Execution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Price != other.Price) return false;
      if (Quantity != other.Quantity) return false;
      if (OrderSide != other.OrderSide) return false;
      if (Role != other.Role) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Price != 0UL) hash ^= Price.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (OrderSide.Length != 0) hash ^= OrderSide.GetHashCode();
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Price != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Price);
      }
      if (Quantity != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Quantity);
      }
      if (OrderSide.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(OrderSide);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Price != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Price);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (OrderSide.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderSide);
      }
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Role);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Execution other) {
      if (other == null) {
        return;
      }
      if (other.Price != 0UL) {
        Price = other.Price;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.OrderSide.Length != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            Price = input.ReadUInt64();
            break;
          }
          case 24: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 34: {
            OrderSide = input.ReadBytes();
            break;
          }
          case 42: {
            Role = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 오더북에 들어고 나서에 오더 정보
  /// </summary>
  public sealed partial class Order : pb::IMessage<Order> {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order(Order other) : this() {
      timestamp_ = other.timestamp_;
      quantity_ = other.quantity_;
      price_ = other.price_;
      orderId_ = other.orderId_;
      traderId_ = other.traderId_;
      orderList_ = other.orderList_ != null ? other.orderList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private uint timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 3;
    private ulong price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 4;
    private ulong orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "trader_id" field.</summary>
    public const int TraderIdFieldNumber = 5;
    private uint traderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TraderId {
      get { return traderId_; }
      set {
        traderId_ = value;
      }
    }

    /// <summary>Field number for the "order_list" field.</summary>
    public const int OrderListFieldNumber = 6;
    private global::Be.OrderList orderList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Be.OrderList OrderList {
      get { return orderList_; }
      set {
        orderList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Quantity != other.Quantity) return false;
      if (Price != other.Price) return false;
      if (OrderId != other.OrderId) return false;
      if (TraderId != other.TraderId) return false;
      if (!object.Equals(OrderList, other.OrderList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Price != 0UL) hash ^= Price.GetHashCode();
      if (OrderId != 0UL) hash ^= OrderId.GetHashCode();
      if (TraderId != 0) hash ^= TraderId.GetHashCode();
      if (orderList_ != null) hash ^= OrderList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Timestamp);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (Price != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Price);
      }
      if (OrderId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(OrderId);
      }
      if (TraderId != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(TraderId);
      }
      if (orderList_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(OrderList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (Price != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Price);
      }
      if (OrderId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(OrderId);
      }
      if (TraderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TraderId);
      }
      if (orderList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrderList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Price != 0UL) {
        Price = other.Price;
      }
      if (other.OrderId != 0UL) {
        OrderId = other.OrderId;
      }
      if (other.TraderId != 0) {
        TraderId = other.TraderId;
      }
      if (other.orderList_ != null) {
        if (orderList_ == null) {
          orderList_ = new global::Be.OrderList();
        }
        OrderList.MergeFrom(other.OrderList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
          case 24: {
            Price = input.ReadUInt64();
            break;
          }
          case 32: {
            OrderId = input.ReadUInt64();
            break;
          }
          case 40: {
            TraderId = input.ReadUInt32();
            break;
          }
          case 50: {
            if (orderList_ == null) {
              orderList_ = new global::Be.OrderList();
            }
            input.ReadMessage(orderList_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 유저로 부터 들어오는 주문에 단위. 아직 오더북엔 들어가지 않은 상태
  /// </summary>
  public sealed partial class Quote : pb::IMessage<Quote> {
    private static readonly pb::MessageParser<Quote> _parser = new pb::MessageParser<Quote>(() => new Quote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Quote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quote(Quote other) : this() {
      orderType_ = other.orderType_;
      orderSide_ = other.orderSide_;
      order_ = other.order_ != null ? other.order_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Quote Clone() {
      return new Quote(this);
    }

    /// <summary>Field number for the "order_type" field.</summary>
    public const int OrderTypeFieldNumber = 1;
    private pb::ByteString orderType_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OrderType {
      get { return orderType_; }
      set {
        orderType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_side" field.</summary>
    public const int OrderSideFieldNumber = 2;
    private pb::ByteString orderSide_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OrderSide {
      get { return orderSide_; }
      set {
        orderSide_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 3;
    private global::Be.Order order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Be.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Quote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Quote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderType != other.OrderType) return false;
      if (OrderSide != other.OrderSide) return false;
      if (!object.Equals(Order, other.Order)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderType.Length != 0) hash ^= OrderType.GetHashCode();
      if (OrderSide.Length != 0) hash ^= OrderSide.GetHashCode();
      if (order_ != null) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OrderType);
      }
      if (OrderSide.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(OrderSide);
      }
      if (order_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderType);
      }
      if (OrderSide.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OrderSide);
      }
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Quote other) {
      if (other == null) {
        return;
      }
      if (other.OrderType.Length != 0) {
        OrderType = other.OrderType;
      }
      if (other.OrderSide.Length != 0) {
        OrderSide = other.OrderSide;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          order_ = new global::Be.Order();
        }
        Order.MergeFrom(other.Order);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderType = input.ReadBytes();
            break;
          }
          case 18: {
            OrderSide = input.ReadBytes();
            break;
          }
          case 26: {
            if (order_ == null) {
              order_ = new global::Be.Order();
            }
            input.ReadMessage(order_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 큐에서 쿼트정보를 가져와서, 오더북에 입력하기 위한
  /// </summary>
  public sealed partial class QuoteList : pb::IMessage<QuoteList> {
    private static readonly pb::MessageParser<QuoteList> _parser = new pb::MessageParser<QuoteList>(() => new QuoteList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuoteList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteList(QuoteList other) : this() {
      quotes_ = other.quotes_.Clone();
      volumn_ = other.volumn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuoteList Clone() {
      return new QuoteList(this);
    }

    /// <summary>Field number for the "quotes" field.</summary>
    public const int QuotesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Be.Quote> _repeated_quotes_codec
        = pb::FieldCodec.ForMessage(10, global::Be.Quote.Parser);
    private readonly pbc::RepeatedField<global::Be.Quote> quotes_ = new pbc::RepeatedField<global::Be.Quote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Be.Quote> Quotes {
      get { return quotes_; }
    }

    /// <summary>Field number for the "volumn" field.</summary>
    public const int VolumnFieldNumber = 2;
    private ulong volumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Volumn {
      get { return volumn_; }
      set {
        volumn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuoteList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuoteList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!quotes_.Equals(other.quotes_)) return false;
      if (Volumn != other.Volumn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= quotes_.GetHashCode();
      if (Volumn != 0UL) hash ^= Volumn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      quotes_.WriteTo(output, _repeated_quotes_codec);
      if (Volumn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Volumn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += quotes_.CalculateSize(_repeated_quotes_codec);
      if (Volumn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Volumn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuoteList other) {
      if (other == null) {
        return;
      }
      quotes_.Add(other.quotes_);
      if (other.Volumn != 0UL) {
        Volumn = other.Volumn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            quotes_.AddEntriesFrom(input, _repeated_quotes_codec);
            break;
          }
          case 16: {
            Volumn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 오더북에 저장될 오더
  /// </summary>
  public sealed partial class OrderList : pb::IMessage<OrderList> {
    private static readonly pb::MessageParser<OrderList> _parser = new pb::MessageParser<OrderList>(() => new OrderList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderList(OrderList other) : this() {
      orders_ = other.orders_.Clone();
      volumn_ = other.volumn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderList Clone() {
      return new OrderList(this);
    }

    /// <summary>Field number for the "orders" field.</summary>
    public const int OrdersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Be.Order> _repeated_orders_codec
        = pb::FieldCodec.ForMessage(10, global::Be.Order.Parser);
    private readonly pbc::RepeatedField<global::Be.Order> orders_ = new pbc::RepeatedField<global::Be.Order>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Be.Order> Orders {
      get { return orders_; }
    }

    /// <summary>Field number for the "volumn" field.</summary>
    public const int VolumnFieldNumber = 2;
    private ulong volumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Volumn {
      get { return volumn_; }
      set {
        volumn_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orders_.Equals(other.orders_)) return false;
      if (Volumn != other.Volumn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orders_.GetHashCode();
      if (Volumn != 0UL) hash ^= Volumn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orders_.WriteTo(output, _repeated_orders_codec);
      if (Volumn != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Volumn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orders_.CalculateSize(_repeated_orders_codec);
      if (Volumn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Volumn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderList other) {
      if (other == null) {
        return;
      }
      orders_.Add(other.orders_);
      if (other.Volumn != 0UL) {
        Volumn = other.Volumn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orders_.AddEntriesFrom(input, _repeated_orders_codec);
            break;
          }
          case 16: {
            Volumn = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderBookList : pb::IMessage<OrderBookList> {
    private static readonly pb::MessageParser<OrderBookList> _parser = new pb::MessageParser<OrderBookList>(() => new OrderBookList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBookList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookList(OrderBookList other) : this() {
      orderbooks_ = other.orderbooks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBookList Clone() {
      return new OrderBookList(this);
    }

    /// <summary>Field number for the "orderbooks" field.</summary>
    public const int OrderbooksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Be.OrderBook> _repeated_orderbooks_codec
        = pb::FieldCodec.ForMessage(10, global::Be.OrderBook.Parser);
    private readonly pbc::RepeatedField<global::Be.OrderBook> orderbooks_ = new pbc::RepeatedField<global::Be.OrderBook>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Be.OrderBook> Orderbooks {
      get { return orderbooks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBookList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBookList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!orderbooks_.Equals(other.orderbooks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= orderbooks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      orderbooks_.WriteTo(output, _repeated_orderbooks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderbooks_.CalculateSize(_repeated_orderbooks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBookList other) {
      if (other == null) {
        return;
      }
      orderbooks_.Add(other.orderbooks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderbooks_.AddEntriesFrom(input, _repeated_orderbooks_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 오더북 전체
  /// </summary>
  public sealed partial class OrderBook : pb::IMessage<OrderBook> {
    private static readonly pb::MessageParser<OrderBook> _parser = new pb::MessageParser<OrderBook>(() => new OrderBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook(OrderBook other) : this() {
      bidTree_ = other.bidTree_ != null ? other.bidTree_.Clone() : null;
      askTree_ = other.askTree_ != null ? other.askTree_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderBook Clone() {
      return new OrderBook(this);
    }

    /// <summary>Field number for the "bid_tree" field.</summary>
    public const int BidTreeFieldNumber = 1;
    private global::Be.OrderTree bidTree_;
    /// <summary>
    ///map &lt; uint64, OrderList > bids_map  = 1;
    ///map &lt; uint64, OrderList > asks_map  = 2;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Be.OrderTree BidTree {
      get { return bidTree_; }
      set {
        bidTree_ = value;
      }
    }

    /// <summary>Field number for the "ask_tree" field.</summary>
    public const int AskTreeFieldNumber = 2;
    private global::Be.OrderTree askTree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Be.OrderTree AskTree {
      get { return askTree_; }
      set {
        askTree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BidTree, other.BidTree)) return false;
      if (!object.Equals(AskTree, other.AskTree)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bidTree_ != null) hash ^= BidTree.GetHashCode();
      if (askTree_ != null) hash ^= AskTree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bidTree_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BidTree);
      }
      if (askTree_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AskTree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bidTree_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BidTree);
      }
      if (askTree_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AskTree);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderBook other) {
      if (other == null) {
        return;
      }
      if (other.bidTree_ != null) {
        if (bidTree_ == null) {
          bidTree_ = new global::Be.OrderTree();
        }
        BidTree.MergeFrom(other.BidTree);
      }
      if (other.askTree_ != null) {
        if (askTree_ == null) {
          askTree_ = new global::Be.OrderTree();
        }
        AskTree.MergeFrom(other.AskTree);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bidTree_ == null) {
              bidTree_ = new global::Be.OrderTree();
            }
            input.ReadMessage(bidTree_);
            break;
          }
          case 18: {
            if (askTree_ == null) {
              askTree_ = new global::Be.OrderTree();
            }
            input.ReadMessage(askTree_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderTree : pb::IMessage<OrderTree> {
    private static readonly pb::MessageParser<OrderTree> _parser = new pb::MessageParser<OrderTree>(() => new OrderTree());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderTree> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Be.TradingReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderTree() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderTree(OrderTree other) : this() {
      priceMap_ = other.priceMap_.Clone();
      orderMap_ = other.orderMap_.Clone();
      volumn_ = other.volumn_;
      minPrice_ = other.minPrice_;
      maxPrice_ = other.maxPrice_;
      numOrders_ = other.numOrders_;
      depth_ = other.depth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderTree Clone() {
      return new OrderTree(this);
    }

    /// <summary>Field number for the "price_map" field.</summary>
    public const int PriceMapFieldNumber = 1;
    private static readonly pbc::MapField<ulong, global::Be.OrderList>.Codec _map_priceMap_codec
        = new pbc::MapField<ulong, global::Be.OrderList>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::Be.OrderList.Parser), 10);
    private readonly pbc::MapField<ulong, global::Be.OrderList> priceMap_ = new pbc::MapField<ulong, global::Be.OrderList>();
    /// <summary>
    /// Key : price
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::Be.OrderList> PriceMap {
      get { return priceMap_; }
    }

    /// <summary>Field number for the "order_map" field.</summary>
    public const int OrderMapFieldNumber = 2;
    private static readonly pbc::MapField<ulong, global::Be.Order>.Codec _map_orderMap_codec
        = new pbc::MapField<ulong, global::Be.Order>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::Be.Order.Parser), 18);
    private readonly pbc::MapField<ulong, global::Be.Order> orderMap_ = new pbc::MapField<ulong, global::Be.Order>();
    /// <summary>
    /// key : Order ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::Be.Order> OrderMap {
      get { return orderMap_; }
    }

    /// <summary>Field number for the "volumn" field.</summary>
    public const int VolumnFieldNumber = 3;
    private ulong volumn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Volumn {
      get { return volumn_; }
      set {
        volumn_ = value;
      }
    }

    /// <summary>Field number for the "min_price" field.</summary>
    public const int MinPriceFieldNumber = 4;
    private ulong minPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MinPrice {
      get { return minPrice_; }
      set {
        minPrice_ = value;
      }
    }

    /// <summary>Field number for the "max_price" field.</summary>
    public const int MaxPriceFieldNumber = 5;
    private ulong maxPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxPrice {
      get { return maxPrice_; }
      set {
        maxPrice_ = value;
      }
    }

    /// <summary>Field number for the "num_orders" field.</summary>
    public const int NumOrdersFieldNumber = 7;
    private ulong numOrders_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong NumOrders {
      get { return numOrders_; }
      set {
        numOrders_ = value;
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 6;
    private uint depth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderTree);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderTree other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PriceMap.Equals(other.PriceMap)) return false;
      if (!OrderMap.Equals(other.OrderMap)) return false;
      if (Volumn != other.Volumn) return false;
      if (MinPrice != other.MinPrice) return false;
      if (MaxPrice != other.MaxPrice) return false;
      if (NumOrders != other.NumOrders) return false;
      if (Depth != other.Depth) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PriceMap.GetHashCode();
      hash ^= OrderMap.GetHashCode();
      if (Volumn != 0UL) hash ^= Volumn.GetHashCode();
      if (MinPrice != 0UL) hash ^= MinPrice.GetHashCode();
      if (MaxPrice != 0UL) hash ^= MaxPrice.GetHashCode();
      if (NumOrders != 0UL) hash ^= NumOrders.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      priceMap_.WriteTo(output, _map_priceMap_codec);
      orderMap_.WriteTo(output, _map_orderMap_codec);
      if (Volumn != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Volumn);
      }
      if (MinPrice != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MinPrice);
      }
      if (MaxPrice != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(MaxPrice);
      }
      if (Depth != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Depth);
      }
      if (NumOrders != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(NumOrders);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += priceMap_.CalculateSize(_map_priceMap_codec);
      size += orderMap_.CalculateSize(_map_orderMap_codec);
      if (Volumn != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Volumn);
      }
      if (MinPrice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MinPrice);
      }
      if (MaxPrice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxPrice);
      }
      if (NumOrders != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(NumOrders);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Depth);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderTree other) {
      if (other == null) {
        return;
      }
      priceMap_.Add(other.priceMap_);
      orderMap_.Add(other.orderMap_);
      if (other.Volumn != 0UL) {
        Volumn = other.Volumn;
      }
      if (other.MinPrice != 0UL) {
        MinPrice = other.MinPrice;
      }
      if (other.MaxPrice != 0UL) {
        MaxPrice = other.MaxPrice;
      }
      if (other.NumOrders != 0UL) {
        NumOrders = other.NumOrders;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            priceMap_.AddEntriesFrom(input, _map_priceMap_codec);
            break;
          }
          case 18: {
            orderMap_.AddEntriesFrom(input, _map_orderMap_codec);
            break;
          }
          case 24: {
            Volumn = input.ReadUInt64();
            break;
          }
          case 32: {
            MinPrice = input.ReadUInt64();
            break;
          }
          case 40: {
            MaxPrice = input.ReadUInt64();
            break;
          }
          case 48: {
            Depth = input.ReadUInt32();
            break;
          }
          case 56: {
            NumOrders = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
