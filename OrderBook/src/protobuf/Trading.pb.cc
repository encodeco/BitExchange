// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Trading.proto

#include "Trading.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Trading_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Execution;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Order;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OrderBook;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OrderTree_OrderMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OrderTree_PriceMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Quote;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Trading_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OrderTree;
}  // namespace protobuf_Trading_2eproto
namespace be {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class NumStepsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumSteps>
      _instance;
} _NumSteps_default_instance_;
class PositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Position>
      _instance;
} _Position_default_instance_;
class MatchingResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchingResult>
      _instance;
} _MatchingResult_default_instance_;
class ExecutionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Execution>
      _instance;
} _Execution_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order>
      _instance;
} _Order_default_instance_;
class QuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Quote>
      _instance;
} _Quote_default_instance_;
class QuoteListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuoteList>
      _instance;
} _QuoteList_default_instance_;
class OrderListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderList>
      _instance;
} _OrderList_default_instance_;
class OrderBookListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBookList>
      _instance;
} _OrderBookList_default_instance_;
class OrderBookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBook>
      _instance;
} _OrderBook_default_instance_;
class OrderTree_PriceMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderTree_PriceMapEntry_DoNotUse>
      _instance;
} _OrderTree_PriceMapEntry_DoNotUse_default_instance_;
class OrderTree_OrderMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderTree_OrderMapEntry_DoNotUse>
      _instance;
} _OrderTree_OrderMapEntry_DoNotUse_default_instance_;
class OrderTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderTree>
      _instance;
} _OrderTree_default_instance_;
}  // namespace be
namespace protobuf_Trading_2eproto {
static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_Empty_default_instance_;
    new (ptr) ::be::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsNumSteps() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_NumSteps_default_instance_;
    new (ptr) ::be::NumSteps();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::NumSteps::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NumSteps =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNumSteps}, {}};

static void InitDefaultsPosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_Position_default_instance_;
    new (ptr) ::be::Position();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::Position::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Position =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPosition}, {}};

static void InitDefaultsMatchingResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_MatchingResult_default_instance_;
    new (ptr) ::be::MatchingResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::MatchingResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MatchingResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMatchingResult}, {
      &protobuf_Trading_2eproto::scc_info_Order.base,
      &protobuf_Trading_2eproto::scc_info_Execution.base,
      &protobuf_Trading_2eproto::scc_info_OrderBook.base,}};

static void InitDefaultsExecution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_Execution_default_instance_;
    new (ptr) ::be::Execution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::Execution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Execution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsExecution}, {}};

static void InitDefaultsOrder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_Order_default_instance_;
    new (ptr) ::be::Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::be::_OrderList_default_instance_;
    new (ptr) ::be::OrderList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::Order::InitAsDefaultInstance();
  ::be::OrderList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Order =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOrder}, {}};

static void InitDefaultsQuote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_Quote_default_instance_;
    new (ptr) ::be::Quote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::Quote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Quote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuote}, {
      &protobuf_Trading_2eproto::scc_info_Order.base,}};

static void InitDefaultsQuoteList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_QuoteList_default_instance_;
    new (ptr) ::be::QuoteList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::QuoteList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QuoteList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuoteList}, {
      &protobuf_Trading_2eproto::scc_info_Quote.base,}};

static void InitDefaultsOrderBookList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_OrderBookList_default_instance_;
    new (ptr) ::be::OrderBookList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::OrderBookList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderBookList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderBookList}, {
      &protobuf_Trading_2eproto::scc_info_OrderBook.base,}};

static void InitDefaultsOrderBook() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_OrderBook_default_instance_;
    new (ptr) ::be::OrderBook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::OrderBook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderBook =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderBook}, {
      &protobuf_Trading_2eproto::scc_info_OrderTree.base,}};

static void InitDefaultsOrderTree_PriceMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_OrderTree_PriceMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::OrderTree_PriceMapEntry_DoNotUse();
  }
  ::be::OrderTree_PriceMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderTree_PriceMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderTree_PriceMapEntry_DoNotUse}, {
      &protobuf_Trading_2eproto::scc_info_Order.base,}};

static void InitDefaultsOrderTree_OrderMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_OrderTree_OrderMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::OrderTree_OrderMapEntry_DoNotUse();
  }
  ::be::OrderTree_OrderMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OrderTree_OrderMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOrderTree_OrderMapEntry_DoNotUse}, {
      &protobuf_Trading_2eproto::scc_info_Order.base,}};

static void InitDefaultsOrderTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::_OrderTree_default_instance_;
    new (ptr) ::be::OrderTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::OrderTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OrderTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOrderTree}, {
      &protobuf_Trading_2eproto::scc_info_OrderTree_PriceMapEntry_DoNotUse.base,
      &protobuf_Trading_2eproto::scc_info_OrderTree_OrderMapEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NumSteps.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Position.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MatchingResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Execution.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Order.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Quote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuoteList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderBookList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderBook.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderTree_PriceMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderTree_OrderMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OrderTree.base);
}

::google::protobuf::Metadata file_level_metadata[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::NumSteps, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::NumSteps, n_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Position, x_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::MatchingResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::MatchingResult, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::MatchingResult, orders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::MatchingResult, executions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::MatchingResult, orderbook_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Execution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Execution, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Execution, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Execution, order_side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Execution, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, trader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Order, order_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Quote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Quote, order_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Quote, order_side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::Quote, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::QuoteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::QuoteList, quotes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::QuoteList, volumn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderList, orders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderList, volumn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderBookList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderBookList, orderbooks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderBook, bid_tree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderBook, ask_tree_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_PriceMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_PriceMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_PriceMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_PriceMapEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_OrderMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_OrderMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_OrderMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree_OrderMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, price_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, order_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, volumn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, min_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, max_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, num_orders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::OrderTree, depth_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::be::Empty)},
  { 5, -1, sizeof(::be::NumSteps)},
  { 11, -1, sizeof(::be::Position)},
  { 17, -1, sizeof(::be::MatchingResult)},
  { 26, -1, sizeof(::be::Execution)},
  { 35, -1, sizeof(::be::Order)},
  { 46, -1, sizeof(::be::Quote)},
  { 54, -1, sizeof(::be::QuoteList)},
  { 61, -1, sizeof(::be::OrderList)},
  { 68, -1, sizeof(::be::OrderBookList)},
  { 74, -1, sizeof(::be::OrderBook)},
  { 81, 88, sizeof(::be::OrderTree_PriceMapEntry_DoNotUse)},
  { 90, 97, sizeof(::be::OrderTree_OrderMapEntry_DoNotUse)},
  { 99, -1, sizeof(::be::OrderTree)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_NumSteps_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_Position_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_MatchingResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_Execution_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_Quote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_QuoteList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderBookList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderBook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderTree_PriceMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderTree_OrderMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::_OrderTree_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Trading.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rTrading.proto\022\002be\"\007\n\005Empty\"\025\n\010NumSteps"
      "\022\t\n\001n\030\001 \001(\005\"\025\n\010Position\022\t\n\001x\030\001 \001(\005\"\203\001\n\016M"
      "atchingResult\022\021\n\ttimestamp\030\001 \001(\r\022\031\n\006orde"
      "rs\030\002 \003(\0132\t.be.Order\022!\n\nexecutions\030\003 \003(\0132"
      "\r.be.Execution\022 \n\torderbook\030\004 \001(\0132\r.be.O"
      "rderBook\"N\n\tExecution\022\r\n\005price\030\002 \001(\004\022\020\n\010"
      "quantity\030\003 \001(\r\022\022\n\norder_side\030\004 \001(\014\022\014\n\004ro"
      "le\030\005 \001(\014\"\203\001\n\005Order\022\021\n\ttimestamp\030\001 \001(\r\022\020\n"
      "\010quantity\030\002 \001(\r\022\r\n\005price\030\003 \001(\004\022\020\n\010order_"
      "id\030\004 \001(\004\022\021\n\ttrader_id\030\005 \001(\r\022!\n\norder_lis"
      "t\030\006 \001(\0132\r.be.OrderList\"I\n\005Quote\022\022\n\norder"
      "_type\030\001 \001(\014\022\022\n\norder_side\030\002 \001(\014\022\030\n\005order"
      "\030\003 \001(\0132\t.be.Order\"6\n\tQuoteList\022\031\n\006quotes"
      "\030\001 \003(\0132\t.be.Quote\022\016\n\006volumn\030\002 \001(\004\"6\n\tOrd"
      "erList\022\031\n\006orders\030\001 \003(\0132\t.be.Order\022\016\n\006vol"
      "umn\030\002 \001(\004\"2\n\rOrderBookList\022!\n\norderbooks"
      "\030\001 \003(\0132\r.be.OrderBook\"M\n\tOrderBook\022\037\n\010bi"
      "d_tree\030\001 \001(\0132\r.be.OrderTree\022\037\n\010ask_tree\030"
      "\002 \001(\0132\r.be.OrderTree\"\300\002\n\tOrderTree\022.\n\tpr"
      "ice_map\030\001 \003(\0132\033.be.OrderTree.PriceMapEnt"
      "ry\022.\n\torder_map\030\002 \003(\0132\033.be.OrderTree.Ord"
      "erMapEntry\022\016\n\006volumn\030\003 \001(\004\022\021\n\tmin_price\030"
      "\004 \001(\004\022\021\n\tmax_price\030\005 \001(\004\022\022\n\nnum_orders\030\007"
      " \001(\004\022\r\n\005depth\030\006 \001(\r\032>\n\rPriceMapEntry\022\013\n\003"
      "key\030\001 \001(\004\022\034\n\005value\030\002 \001(\0132\r.be.OrderList:"
      "\0028\001\032:\n\rOrderMapEntry\022\013\n\003key\030\001 \001(\004\022\030\n\005val"
      "ue\030\002 \001(\0132\t.be.Order:\0028\0012_\n\016MyRandomWalke"
      "r\022#\n\006Update\022\014.be.NumSteps\032\t.be.Empty\"\000\022("
      "\n\013GetPosition\022\t.be.Empty\032\014.be.Position\"\000"
      "2\230\001\n\007Trading\022*\n\020QuoteUpdateAsync\022\t.be.Qu"
      "ote\032\t.be.Empty\"\000\0222\n\017QuoteUpdateSync\022\t.be"
      ".Quote\032\022.be.MatchingResult\"\000\022-\n\017OrderBoo"
      "kUpdate\022\t.be.Empty\032\r.be.OrderBook\"\000b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1323);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Trading.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Trading_2eproto
namespace be {

// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:be.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:be.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:be.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:be.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NumSteps::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumSteps::kNFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumSteps::NumSteps()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_NumSteps.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.NumSteps)
}
NumSteps::NumSteps(const NumSteps& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  n_ = from.n_;
  // @@protoc_insertion_point(copy_constructor:be.NumSteps)
}

void NumSteps::SharedCtor() {
  n_ = 0;
}

NumSteps::~NumSteps() {
  // @@protoc_insertion_point(destructor:be.NumSteps)
  SharedDtor();
}

void NumSteps::SharedDtor() {
}

void NumSteps::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NumSteps::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumSteps& NumSteps::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_NumSteps.base);
  return *internal_default_instance();
}


void NumSteps::Clear() {
// @@protoc_insertion_point(message_clear_start:be.NumSteps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  n_ = 0;
  _internal_metadata_.Clear();
}

bool NumSteps::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.NumSteps)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 n = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &n_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.NumSteps)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.NumSteps)
  return false;
#undef DO_
}

void NumSteps::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.NumSteps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->n(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.NumSteps)
}

::google::protobuf::uint8* NumSteps::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.NumSteps)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 n = 1;
  if (this->n() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->n(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.NumSteps)
  return target;
}

size_t NumSteps::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.NumSteps)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 n = 1;
  if (this->n() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->n());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumSteps::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.NumSteps)
  GOOGLE_DCHECK_NE(&from, this);
  const NumSteps* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumSteps>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.NumSteps)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.NumSteps)
    MergeFrom(*source);
  }
}

void NumSteps::MergeFrom(const NumSteps& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.NumSteps)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.n() != 0) {
    set_n(from.n());
  }
}

void NumSteps::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.NumSteps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumSteps::CopyFrom(const NumSteps& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.NumSteps)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumSteps::IsInitialized() const {
  return true;
}

void NumSteps::Swap(NumSteps* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumSteps::InternalSwap(NumSteps* other) {
  using std::swap;
  swap(n_, other->n_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NumSteps::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Position::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position::kXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position::Position()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Position.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.Position)
}
Position::Position(const Position& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_ = from.x_;
  // @@protoc_insertion_point(copy_constructor:be.Position)
}

void Position::SharedCtor() {
  x_ = 0;
}

Position::~Position() {
  // @@protoc_insertion_point(destructor:be.Position)
  SharedDtor();
}

void Position::SharedDtor() {
}

void Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Position::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position& Position::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Position.base);
  return *internal_default_instance();
}


void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:be.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x_ = 0;
  _internal_metadata_.Clear();
}

bool Position::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.Position)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.Position)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.Position)
  return false;
#undef DO_
}

void Position::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.Position)
}

::google::protobuf::uint8* Position::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.Position)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.Position)
  return target;
}

size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.Position)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Position::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const Position* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.Position)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.Position)
    MergeFrom(*source);
  }
}

void Position::MergeFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
}

void Position::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position::IsInitialized() const {
  return true;
}

void Position::Swap(Position* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position::InternalSwap(Position* other) {
  using std::swap;
  swap(x_, other->x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Position::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchingResult::InitAsDefaultInstance() {
  ::be::_MatchingResult_default_instance_._instance.get_mutable()->orderbook_ = const_cast< ::be::OrderBook*>(
      ::be::OrderBook::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchingResult::kTimestampFieldNumber;
const int MatchingResult::kOrdersFieldNumber;
const int MatchingResult::kExecutionsFieldNumber;
const int MatchingResult::kOrderbookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchingResult::MatchingResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_MatchingResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.MatchingResult)
}
MatchingResult::MatchingResult(const MatchingResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orders_(from.orders_),
      executions_(from.executions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_orderbook()) {
    orderbook_ = new ::be::OrderBook(*from.orderbook_);
  } else {
    orderbook_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:be.MatchingResult)
}

void MatchingResult::SharedCtor() {
  ::memset(&orderbook_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&orderbook_)) + sizeof(timestamp_));
}

MatchingResult::~MatchingResult() {
  // @@protoc_insertion_point(destructor:be.MatchingResult)
  SharedDtor();
}

void MatchingResult::SharedDtor() {
  if (this != internal_default_instance()) delete orderbook_;
}

void MatchingResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MatchingResult::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchingResult& MatchingResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_MatchingResult.base);
  return *internal_default_instance();
}


void MatchingResult::Clear() {
// @@protoc_insertion_point(message_clear_start:be.MatchingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  executions_.Clear();
  if (GetArenaNoVirtual() == NULL && orderbook_ != NULL) {
    delete orderbook_;
  }
  orderbook_ = NULL;
  timestamp_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchingResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.MatchingResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .be.Order orders = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .be.Execution executions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_executions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .be.OrderBook orderbook = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orderbook()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.MatchingResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.MatchingResult)
  return false;
#undef DO_
}

void MatchingResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.MatchingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // repeated .be.Order orders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->orders(static_cast<int>(i)),
      output);
  }

  // repeated .be.Execution executions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->executions(static_cast<int>(i)),
      output);
  }

  // .be.OrderBook orderbook = 4;
  if (this->has_orderbook()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_orderbook(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.MatchingResult)
}

::google::protobuf::uint8* MatchingResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.MatchingResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // repeated .be.Order orders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->orders(static_cast<int>(i)), deterministic, target);
  }

  // repeated .be.Execution executions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->executions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->executions(static_cast<int>(i)), deterministic, target);
  }

  // .be.OrderBook orderbook = 4;
  if (this->has_orderbook()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_orderbook(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.MatchingResult)
  return target;
}

size_t MatchingResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.MatchingResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.Order orders = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  // repeated .be.Execution executions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->executions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->executions(static_cast<int>(i)));
    }
  }

  // .be.OrderBook orderbook = 4;
  if (this->has_orderbook()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *orderbook_);
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatchingResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.MatchingResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchingResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchingResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.MatchingResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.MatchingResult)
    MergeFrom(*source);
  }
}

void MatchingResult::MergeFrom(const MatchingResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.MatchingResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  executions_.MergeFrom(from.executions_);
  if (from.has_orderbook()) {
    mutable_orderbook()->::be::OrderBook::MergeFrom(from.orderbook());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void MatchingResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.MatchingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchingResult::CopyFrom(const MatchingResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.MatchingResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchingResult::IsInitialized() const {
  return true;
}

void MatchingResult::Swap(MatchingResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchingResult::InternalSwap(MatchingResult* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  CastToBase(&executions_)->InternalSwap(CastToBase(&other->executions_));
  swap(orderbook_, other->orderbook_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MatchingResult::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Execution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Execution::kPriceFieldNumber;
const int Execution::kQuantityFieldNumber;
const int Execution::kOrderSideFieldNumber;
const int Execution::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Execution::Execution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Execution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.Execution)
}
Execution::Execution(const Execution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_side().size() > 0) {
    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.role().size() > 0) {
    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&price_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:be.Execution)
}

void Execution::SharedCtor() {
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&price_)) + sizeof(quantity_));
}

Execution::~Execution() {
  // @@protoc_insertion_point(destructor:be.Execution)
  SharedDtor();
}

void Execution::SharedDtor() {
  order_side_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Execution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Execution::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Execution& Execution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Execution.base);
  return *internal_default_instance();
}


void Execution::Clear() {
// @@protoc_insertion_point(message_clear_start:be.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&price_)) + sizeof(quantity_));
  _internal_metadata_.Clear();
}

bool Execution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.Execution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quantity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes order_side = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_side()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes role = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_role()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.Execution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.Execution)
  return false;
#undef DO_
}

void Execution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 price = 2;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->price(), output);
  }

  // uint32 quantity = 3;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quantity(), output);
  }

  // bytes order_side = 4;
  if (this->order_side().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->order_side(), output);
  }

  // bytes role = 5;
  if (this->role().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->role(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.Execution)
}

::google::protobuf::uint8* Execution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.Execution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 price = 2;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->price(), target);
  }

  // uint32 quantity = 3;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quantity(), target);
  }

  // bytes order_side = 4;
  if (this->order_side().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->order_side(), target);
  }

  // bytes role = 5;
  if (this->role().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->role(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.Execution)
  return target;
}

size_t Execution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.Execution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes order_side = 4;
  if (this->order_side().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_side());
  }

  // bytes role = 5;
  if (this->role().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->role());
  }

  // uint64 price = 2;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->price());
  }

  // uint32 quantity = 3;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Execution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  const Execution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Execution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.Execution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.Execution)
    MergeFrom(*source);
  }
}

void Execution::MergeFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.Execution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_side().size() > 0) {

    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  if (from.role().size() > 0) {

    role_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.role_);
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
}

void Execution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Execution::CopyFrom(const Execution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.Execution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Execution::IsInitialized() const {
  return true;
}

void Execution::Swap(Execution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Execution::InternalSwap(Execution* other) {
  using std::swap;
  order_side_.Swap(&other->order_side_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  role_.Swap(&other->role_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(price_, other->price_);
  swap(quantity_, other->quantity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Execution::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Order::InitAsDefaultInstance() {
  ::be::_Order_default_instance_._instance.get_mutable()->order_list_ = const_cast< ::be::OrderList*>(
      ::be::OrderList::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kTimestampFieldNumber;
const int Order::kQuantityFieldNumber;
const int Order::kPriceFieldNumber;
const int Order::kOrderIdFieldNumber;
const int Order::kTraderIdFieldNumber;
const int Order::kOrderListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Order.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order_list()) {
    order_list_ = new ::be::OrderList(*from.order_list_);
  } else {
    order_list_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&trader_id_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(trader_id_));
  // @@protoc_insertion_point(copy_constructor:be.Order)
}

void Order::SharedCtor() {
  ::memset(&order_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trader_id_) -
      reinterpret_cast<char*>(&order_list_)) + sizeof(trader_id_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:be.Order)
  SharedDtor();
}

void Order::SharedDtor() {
  if (this != internal_default_instance()) delete order_list_;
}

void Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Order.base);
  return *internal_default_instance();
}


void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:be.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && order_list_ != NULL) {
    delete order_list_;
  }
  order_list_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trader_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(trader_id_));
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.Order)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 order_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 trader_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trader_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .be.OrderList order_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->price(), output);
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->order_id(), output);
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->trader_id(), output);
  }

  // .be.OrderList order_list = 6;
  if (this->has_order_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_order_list(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->price(), target);
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->order_id(), target);
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->trader_id(), target);
  }

  // .be.OrderList order_list = 6;
  if (this->has_order_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_order_list(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.Order)
  return target;
}

size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.Order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .be.OrderList order_list = 6;
  if (this->has_order_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_list_);
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity());
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->price());
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->order_id());
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trader_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order_list()) {
    mutable_order_list()->::be::OrderList::MergeFrom(from.order_list());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
  if (from.trader_id() != 0) {
    set_trader_id(from.trader_id());
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  swap(order_list_, other->order_list_);
  swap(timestamp_, other->timestamp_);
  swap(quantity_, other->quantity_);
  swap(price_, other->price_);
  swap(order_id_, other->order_id_);
  swap(trader_id_, other->trader_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Quote::InitAsDefaultInstance() {
  ::be::_Quote_default_instance_._instance.get_mutable()->order_ = const_cast< ::be::Order*>(
      ::be::Order::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quote::kOrderTypeFieldNumber;
const int Quote::kOrderSideFieldNumber;
const int Quote::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quote::Quote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Quote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.Quote)
}
Quote::Quote(const Quote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_type().size() > 0) {
    order_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_type_);
  }
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_side().size() > 0) {
    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  if (from.has_order()) {
    order_ = new ::be::Order(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:be.Quote)
}

void Quote::SharedCtor() {
  order_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = NULL;
}

Quote::~Quote() {
  // @@protoc_insertion_point(destructor:be.Quote)
  SharedDtor();
}

void Quote::SharedDtor() {
  order_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete order_;
}

void Quote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Quote::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quote& Quote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Quote.base);
  return *internal_default_instance();
}


void Quote::Clear() {
// @@protoc_insertion_point(message_clear_start:be.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  _internal_metadata_.Clear();
}

bool Quote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.Quote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes order_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes order_side = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_side()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .be.Order order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.Quote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.Quote)
  return false;
#undef DO_
}

void Quote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->order_type(), output);
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->order_side(), output);
  }

  // .be.Order order = 3;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_order(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.Quote)
}

::google::protobuf::uint8* Quote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->order_type(), target);
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->order_side(), target);
  }

  // .be.Order order = 3;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_order(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.Quote)
  return target;
}

size_t Quote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.Quote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_type());
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_side());
  }

  // .be.Order order = 3;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Quote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  const Quote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.Quote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.Quote)
    MergeFrom(*source);
  }
}

void Quote::MergeFrom(const Quote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_type().size() > 0) {

    order_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_type_);
  }
  if (from.order_side().size() > 0) {

    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  if (from.has_order()) {
    mutable_order()->::be::Order::MergeFrom(from.order());
  }
}

void Quote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quote::CopyFrom(const Quote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quote::IsInitialized() const {
  return true;
}

void Quote::Swap(Quote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quote::InternalSwap(Quote* other) {
  using std::swap;
  order_type_.Swap(&other->order_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_side_.Swap(&other->order_side_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(order_, other->order_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Quote::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuoteList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuoteList::kQuotesFieldNumber;
const int QuoteList::kVolumnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuoteList::QuoteList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_QuoteList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.QuoteList)
}
QuoteList::QuoteList(const QuoteList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  volumn_ = from.volumn_;
  // @@protoc_insertion_point(copy_constructor:be.QuoteList)
}

void QuoteList::SharedCtor() {
  volumn_ = GOOGLE_ULONGLONG(0);
}

QuoteList::~QuoteList() {
  // @@protoc_insertion_point(destructor:be.QuoteList)
  SharedDtor();
}

void QuoteList::SharedDtor() {
}

void QuoteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuoteList::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuoteList& QuoteList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_QuoteList.base);
  return *internal_default_instance();
}


void QuoteList::Clear() {
// @@protoc_insertion_point(message_clear_start:be.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  volumn_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool QuoteList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.QuoteList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .be.Quote quotes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 volumn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &volumn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.QuoteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.QuoteList)
  return false;
#undef DO_
}

void QuoteList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.Quote quotes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->quotes(static_cast<int>(i)),
      output);
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->volumn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.QuoteList)
}

::google::protobuf::uint8* QuoteList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.Quote quotes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->volumn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.QuoteList)
  return target;
}

size_t QuoteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.QuoteList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.Quote quotes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->volumn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuoteList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.QuoteList)
  GOOGLE_DCHECK_NE(&from, this);
  const QuoteList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuoteList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.QuoteList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.QuoteList)
    MergeFrom(*source);
  }
}

void QuoteList::MergeFrom(const QuoteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.QuoteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.volumn() != 0) {
    set_volumn(from.volumn());
  }
}

void QuoteList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.QuoteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuoteList::CopyFrom(const QuoteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.QuoteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuoteList::IsInitialized() const {
  return true;
}

void QuoteList::Swap(QuoteList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuoteList::InternalSwap(QuoteList* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  swap(volumn_, other->volumn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuoteList::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderList::kOrdersFieldNumber;
const int OrderList::kVolumnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderList::OrderList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_Order.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.OrderList)
}
OrderList::OrderList(const OrderList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  volumn_ = from.volumn_;
  // @@protoc_insertion_point(copy_constructor:be.OrderList)
}

void OrderList::SharedCtor() {
  volumn_ = GOOGLE_ULONGLONG(0);
}

OrderList::~OrderList() {
  // @@protoc_insertion_point(destructor:be.OrderList)
  SharedDtor();
}

void OrderList::SharedDtor() {
}

void OrderList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderList::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderList& OrderList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_Order.base);
  return *internal_default_instance();
}


void OrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:be.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  volumn_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool OrderList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.OrderList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .be.Order orders = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 volumn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &volumn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.OrderList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.OrderList)
  return false;
#undef DO_
}

void OrderList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->orders(static_cast<int>(i)),
      output);
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->volumn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.OrderList)
}

::google::protobuf::uint8* OrderList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->orders(static_cast<int>(i)), deterministic, target);
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->volumn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.OrderList)
  return target;
}

size_t OrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.OrderList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.Order orders = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  // uint64 volumn = 2;
  if (this->volumn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->volumn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.OrderList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.OrderList)
    MergeFrom(*source);
  }
}

void OrderList::MergeFrom(const OrderList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  if (from.volumn() != 0) {
    set_volumn(from.volumn());
  }
}

void OrderList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderList::CopyFrom(const OrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderList::IsInitialized() const {
  return true;
}

void OrderList::Swap(OrderList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderList::InternalSwap(OrderList* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  swap(volumn_, other->volumn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderList::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderBookList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBookList::kOrderbooksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBookList::OrderBookList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_OrderBookList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.OrderBookList)
}
OrderBookList::OrderBookList(const OrderBookList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orderbooks_(from.orderbooks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:be.OrderBookList)
}

void OrderBookList::SharedCtor() {
}

OrderBookList::~OrderBookList() {
  // @@protoc_insertion_point(destructor:be.OrderBookList)
  SharedDtor();
}

void OrderBookList::SharedDtor() {
}

void OrderBookList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderBookList::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBookList& OrderBookList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_OrderBookList.base);
  return *internal_default_instance();
}


void OrderBookList::Clear() {
// @@protoc_insertion_point(message_clear_start:be.OrderBookList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orderbooks_.Clear();
  _internal_metadata_.Clear();
}

bool OrderBookList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.OrderBookList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .be.OrderBook orderbooks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orderbooks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.OrderBookList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.OrderBookList)
  return false;
#undef DO_
}

void OrderBookList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.OrderBookList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.OrderBook orderbooks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderbooks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->orderbooks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.OrderBookList)
}

::google::protobuf::uint8* OrderBookList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.OrderBookList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.OrderBook orderbooks = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orderbooks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->orderbooks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.OrderBookList)
  return target;
}

size_t OrderBookList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.OrderBookList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.OrderBook orderbooks = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->orderbooks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orderbooks(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderBookList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.OrderBookList)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBookList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBookList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.OrderBookList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.OrderBookList)
    MergeFrom(*source);
  }
}

void OrderBookList::MergeFrom(const OrderBookList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.OrderBookList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orderbooks_.MergeFrom(from.orderbooks_);
}

void OrderBookList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.OrderBookList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBookList::CopyFrom(const OrderBookList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.OrderBookList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBookList::IsInitialized() const {
  return true;
}

void OrderBookList::Swap(OrderBookList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderBookList::InternalSwap(OrderBookList* other) {
  using std::swap;
  CastToBase(&orderbooks_)->InternalSwap(CastToBase(&other->orderbooks_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderBookList::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderBook::InitAsDefaultInstance() {
  ::be::_OrderBook_default_instance_._instance.get_mutable()->bid_tree_ = const_cast< ::be::OrderTree*>(
      ::be::OrderTree::internal_default_instance());
  ::be::_OrderBook_default_instance_._instance.get_mutable()->ask_tree_ = const_cast< ::be::OrderTree*>(
      ::be::OrderTree::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBook::kBidTreeFieldNumber;
const int OrderBook::kAskTreeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBook::OrderBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_OrderBook.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.OrderBook)
}
OrderBook::OrderBook(const OrderBook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bid_tree()) {
    bid_tree_ = new ::be::OrderTree(*from.bid_tree_);
  } else {
    bid_tree_ = NULL;
  }
  if (from.has_ask_tree()) {
    ask_tree_ = new ::be::OrderTree(*from.ask_tree_);
  } else {
    ask_tree_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:be.OrderBook)
}

void OrderBook::SharedCtor() {
  ::memset(&bid_tree_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ask_tree_) -
      reinterpret_cast<char*>(&bid_tree_)) + sizeof(ask_tree_));
}

OrderBook::~OrderBook() {
  // @@protoc_insertion_point(destructor:be.OrderBook)
  SharedDtor();
}

void OrderBook::SharedDtor() {
  if (this != internal_default_instance()) delete bid_tree_;
  if (this != internal_default_instance()) delete ask_tree_;
}

void OrderBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderBook::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBook& OrderBook::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_OrderBook.base);
  return *internal_default_instance();
}


void OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:be.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bid_tree_ != NULL) {
    delete bid_tree_;
  }
  bid_tree_ = NULL;
  if (GetArenaNoVirtual() == NULL && ask_tree_ != NULL) {
    delete ask_tree_;
  }
  ask_tree_ = NULL;
  _internal_metadata_.Clear();
}

bool OrderBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.OrderBook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .be.OrderTree bid_tree = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bid_tree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .be.OrderTree ask_tree = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ask_tree()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.OrderBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.OrderBook)
  return false;
#undef DO_
}

void OrderBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .be.OrderTree bid_tree = 1;
  if (this->has_bid_tree()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_bid_tree(), output);
  }

  // .be.OrderTree ask_tree = 2;
  if (this->has_ask_tree()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ask_tree(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.OrderBook)
}

::google::protobuf::uint8* OrderBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .be.OrderTree bid_tree = 1;
  if (this->has_bid_tree()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_bid_tree(), deterministic, target);
  }

  // .be.OrderTree ask_tree = 2;
  if (this->has_ask_tree()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ask_tree(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.OrderBook)
  return target;
}

size_t OrderBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.OrderBook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .be.OrderTree bid_tree = 1;
  if (this->has_bid_tree()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bid_tree_);
  }

  // .be.OrderTree ask_tree = 2;
  if (this->has_ask_tree()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ask_tree_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.OrderBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.OrderBook)
    MergeFrom(*source);
  }
}

void OrderBook::MergeFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bid_tree()) {
    mutable_bid_tree()->::be::OrderTree::MergeFrom(from.bid_tree());
  }
  if (from.has_ask_tree()) {
    mutable_ask_tree()->::be::OrderTree::MergeFrom(from.ask_tree());
  }
}

void OrderBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBook::CopyFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBook::IsInitialized() const {
  return true;
}

void OrderBook::Swap(OrderBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderBook::InternalSwap(OrderBook* other) {
  using std::swap;
  swap(bid_tree_, other->bid_tree_);
  swap(ask_tree_, other->ask_tree_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderBook::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

OrderTree_PriceMapEntry_DoNotUse::OrderTree_PriceMapEntry_DoNotUse() {}
OrderTree_PriceMapEntry_DoNotUse::OrderTree_PriceMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OrderTree_PriceMapEntry_DoNotUse::MergeFrom(const OrderTree_PriceMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OrderTree_PriceMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[11];
}
void OrderTree_PriceMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

OrderTree_OrderMapEntry_DoNotUse::OrderTree_OrderMapEntry_DoNotUse() {}
OrderTree_OrderMapEntry_DoNotUse::OrderTree_OrderMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void OrderTree_OrderMapEntry_DoNotUse::MergeFrom(const OrderTree_OrderMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata OrderTree_OrderMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[12];
}
void OrderTree_OrderMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void OrderTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderTree::kPriceMapFieldNumber;
const int OrderTree::kOrderMapFieldNumber;
const int OrderTree::kVolumnFieldNumber;
const int OrderTree::kMinPriceFieldNumber;
const int OrderTree::kMaxPriceFieldNumber;
const int OrderTree::kNumOrdersFieldNumber;
const int OrderTree::kDepthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderTree::OrderTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Trading_2eproto::scc_info_OrderTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.OrderTree)
}
OrderTree::OrderTree(const OrderTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_map_.MergeFrom(from.price_map_);
  order_map_.MergeFrom(from.order_map_);
  ::memcpy(&volumn_, &from.volumn_,
    static_cast<size_t>(reinterpret_cast<char*>(&depth_) -
    reinterpret_cast<char*>(&volumn_)) + sizeof(depth_));
  // @@protoc_insertion_point(copy_constructor:be.OrderTree)
}

void OrderTree::SharedCtor() {
  ::memset(&volumn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&depth_) -
      reinterpret_cast<char*>(&volumn_)) + sizeof(depth_));
}

OrderTree::~OrderTree() {
  // @@protoc_insertion_point(destructor:be.OrderTree)
  SharedDtor();
}

void OrderTree::SharedDtor() {
}

void OrderTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OrderTree::descriptor() {
  ::protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderTree& OrderTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Trading_2eproto::scc_info_OrderTree.base);
  return *internal_default_instance();
}


void OrderTree::Clear() {
// @@protoc_insertion_point(message_clear_start:be.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_map_.Clear();
  order_map_.Clear();
  ::memset(&volumn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&depth_) -
      reinterpret_cast<char*>(&volumn_)) + sizeof(depth_));
  _internal_metadata_.Clear();
}

bool OrderTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.OrderTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .be.OrderList> price_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          OrderTree_PriceMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OrderTree_PriceMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::OrderList,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList > > parser(&price_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .be.Order> order_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          OrderTree_OrderMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              OrderTree_OrderMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::Order,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order > > parser(&order_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 volumn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &volumn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 min_price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &min_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 max_price = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 depth = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 num_orders = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_orders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.OrderTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.OrderTree)
  return false;
#undef DO_
}

void OrderTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.OrderList> price_map = 1;
  if (!this->price_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->price_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->price_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderTree_PriceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(price_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<OrderTree_PriceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it) {
        entry.reset(price_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint64, .be.Order> order_map = 2;
  if (!this->order_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->order_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->order_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderTree_OrderMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(order_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<OrderTree_OrderMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it) {
        entry.reset(order_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // uint64 volumn = 3;
  if (this->volumn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->volumn(), output);
  }

  // uint64 min_price = 4;
  if (this->min_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->min_price(), output);
  }

  // uint64 max_price = 5;
  if (this->max_price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->max_price(), output);
  }

  // uint32 depth = 6;
  if (this->depth() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->depth(), output);
  }

  // uint64 num_orders = 7;
  if (this->num_orders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->num_orders(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.OrderTree)
}

::google::protobuf::uint8* OrderTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.OrderList> price_map = 1;
  if (!this->price_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->price_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->price_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderTree_PriceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(price_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<OrderTree_PriceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it) {
        entry.reset(price_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint64, .be.Order> order_map = 2;
  if (!this->order_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->order_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->order_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<OrderTree_OrderMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(order_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<OrderTree_OrderMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it) {
        entry.reset(order_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // uint64 volumn = 3;
  if (this->volumn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->volumn(), target);
  }

  // uint64 min_price = 4;
  if (this->min_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->min_price(), target);
  }

  // uint64 max_price = 5;
  if (this->max_price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->max_price(), target);
  }

  // uint32 depth = 6;
  if (this->depth() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->depth(), target);
  }

  // uint64 num_orders = 7;
  if (this->num_orders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->num_orders(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.OrderTree)
  return target;
}

size_t OrderTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.OrderTree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .be.OrderList> price_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->price_map_size());
  {
    ::std::unique_ptr<OrderTree_PriceMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::OrderList >::const_iterator
        it = this->price_map().begin();
        it != this->price_map().end(); ++it) {
      entry.reset(price_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint64, .be.Order> order_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->order_map_size());
  {
    ::std::unique_ptr<OrderTree_OrderMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::Order >::const_iterator
        it = this->order_map().begin();
        it != this->order_map().end(); ++it) {
      entry.reset(order_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 volumn = 3;
  if (this->volumn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->volumn());
  }

  // uint64 min_price = 4;
  if (this->min_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->min_price());
  }

  // uint64 max_price = 5;
  if (this->max_price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_price());
  }

  // uint64 num_orders = 7;
  if (this->num_orders() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_orders());
  }

  // uint32 depth = 6;
  if (this->depth() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->depth());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OrderTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.OrderTree)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.OrderTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.OrderTree)
    MergeFrom(*source);
  }
}

void OrderTree::MergeFrom(const OrderTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.OrderTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  price_map_.MergeFrom(from.price_map_);
  order_map_.MergeFrom(from.order_map_);
  if (from.volumn() != 0) {
    set_volumn(from.volumn());
  }
  if (from.min_price() != 0) {
    set_min_price(from.min_price());
  }
  if (from.max_price() != 0) {
    set_max_price(from.max_price());
  }
  if (from.num_orders() != 0) {
    set_num_orders(from.num_orders());
  }
  if (from.depth() != 0) {
    set_depth(from.depth());
  }
}

void OrderTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.OrderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderTree::CopyFrom(const OrderTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.OrderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderTree::IsInitialized() const {
  return true;
}

void OrderTree::Swap(OrderTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderTree::InternalSwap(OrderTree* other) {
  using std::swap;
  price_map_.Swap(&other->price_map_);
  order_map_.Swap(&other->order_map_);
  swap(volumn_, other->volumn_);
  swap(min_price_, other->min_price_);
  swap(max_price_, other->max_price_);
  swap(num_orders_, other->num_orders_);
  swap(depth_, other->depth_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OrderTree::GetMetadata() const {
  protobuf_Trading_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Trading_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace be
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::Empty* Arena::CreateMaybeMessage< ::be::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::be::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::NumSteps* Arena::CreateMaybeMessage< ::be::NumSteps >(Arena* arena) {
  return Arena::CreateInternal< ::be::NumSteps >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::Position* Arena::CreateMaybeMessage< ::be::Position >(Arena* arena) {
  return Arena::CreateInternal< ::be::Position >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::MatchingResult* Arena::CreateMaybeMessage< ::be::MatchingResult >(Arena* arena) {
  return Arena::CreateInternal< ::be::MatchingResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::Execution* Arena::CreateMaybeMessage< ::be::Execution >(Arena* arena) {
  return Arena::CreateInternal< ::be::Execution >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::Order* Arena::CreateMaybeMessage< ::be::Order >(Arena* arena) {
  return Arena::CreateInternal< ::be::Order >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::Quote* Arena::CreateMaybeMessage< ::be::Quote >(Arena* arena) {
  return Arena::CreateInternal< ::be::Quote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::QuoteList* Arena::CreateMaybeMessage< ::be::QuoteList >(Arena* arena) {
  return Arena::CreateInternal< ::be::QuoteList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderList* Arena::CreateMaybeMessage< ::be::OrderList >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderBookList* Arena::CreateMaybeMessage< ::be::OrderBookList >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderBookList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderBook* Arena::CreateMaybeMessage< ::be::OrderBook >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderBook >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderTree_PriceMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::OrderTree_PriceMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderTree_PriceMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderTree_OrderMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::OrderTree_OrderMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderTree_OrderMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::OrderTree* Arena::CreateMaybeMessage< ::be::OrderTree >(Arena* arena) {
  return Arena::CreateInternal< ::be::OrderTree >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
