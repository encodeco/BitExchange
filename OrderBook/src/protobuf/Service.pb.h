// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service.proto

#ifndef PROTOBUF_INCLUDED_Service_2eproto
#define PROTOBUF_INCLUDED_Service_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto 

namespace protobuf_Service_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Service_2eproto
namespace be {
namespace protobuf {
class Service;
class ServiceDefaultTypeInternal;
extern ServiceDefaultTypeInternal _Service_default_instance_;
class Service_Order;
class Service_OrderDefaultTypeInternal;
extern Service_OrderDefaultTypeInternal _Service_Order_default_instance_;
class Service_OrderBook;
class Service_OrderBookDefaultTypeInternal;
extern Service_OrderBookDefaultTypeInternal _Service_OrderBook_default_instance_;
class Service_OrderBook_AsksMapEntry_DoNotUse;
class Service_OrderBook_AsksMapEntry_DoNotUseDefaultTypeInternal;
extern Service_OrderBook_AsksMapEntry_DoNotUseDefaultTypeInternal _Service_OrderBook_AsksMapEntry_DoNotUse_default_instance_;
class Service_OrderBook_BidsMapEntry_DoNotUse;
class Service_OrderBook_BidsMapEntry_DoNotUseDefaultTypeInternal;
extern Service_OrderBook_BidsMapEntry_DoNotUseDefaultTypeInternal _Service_OrderBook_BidsMapEntry_DoNotUse_default_instance_;
class Service_OrderList;
class Service_OrderListDefaultTypeInternal;
extern Service_OrderListDefaultTypeInternal _Service_OrderList_default_instance_;
class Service_OrderTree;
class Service_OrderTreeDefaultTypeInternal;
extern Service_OrderTreeDefaultTypeInternal _Service_OrderTree_default_instance_;
class Service_OrderTree_OrderMapEntry_DoNotUse;
class Service_OrderTree_OrderMapEntry_DoNotUseDefaultTypeInternal;
extern Service_OrderTree_OrderMapEntry_DoNotUseDefaultTypeInternal _Service_OrderTree_OrderMapEntry_DoNotUse_default_instance_;
class Service_OrderTree_PriceMapEntry_DoNotUse;
class Service_OrderTree_PriceMapEntry_DoNotUseDefaultTypeInternal;
extern Service_OrderTree_PriceMapEntry_DoNotUseDefaultTypeInternal _Service_OrderTree_PriceMapEntry_DoNotUse_default_instance_;
class Service_Quote;
class Service_QuoteDefaultTypeInternal;
extern Service_QuoteDefaultTypeInternal _Service_Quote_default_instance_;
class Service_QuoteList;
class Service_QuoteListDefaultTypeInternal;
extern Service_QuoteListDefaultTypeInternal _Service_QuoteList_default_instance_;
}  // namespace protobuf
}  // namespace be
namespace google {
namespace protobuf {
template<> ::be::protobuf::Service* Arena::CreateMaybeMessage<::be::protobuf::Service>(Arena*);
template<> ::be::protobuf::Service_Order* Arena::CreateMaybeMessage<::be::protobuf::Service_Order>(Arena*);
template<> ::be::protobuf::Service_OrderBook* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderBook>(Arena*);
template<> ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse>(Arena*);
template<> ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse>(Arena*);
template<> ::be::protobuf::Service_OrderList* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderList>(Arena*);
template<> ::be::protobuf::Service_OrderTree* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderTree>(Arena*);
template<> ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse>(Arena*);
template<> ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse* Arena::CreateMaybeMessage<::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse>(Arena*);
template<> ::be::protobuf::Service_Quote* Arena::CreateMaybeMessage<::be::protobuf::Service_Quote>(Arena*);
template<> ::be::protobuf::Service_QuoteList* Arena::CreateMaybeMessage<::be::protobuf::Service_QuoteList>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace be {
namespace protobuf {

// ===================================================================

class Service_Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.Order) */ {
 public:
  Service_Order();
  virtual ~Service_Order();

  Service_Order(const Service_Order& from);

  inline Service_Order& operator=(const Service_Order& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_Order(Service_Order&& from) noexcept
    : Service_Order() {
    *this = ::std::move(from);
  }

  inline Service_Order& operator=(Service_Order&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_Order& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_Order* internal_default_instance() {
    return reinterpret_cast<const Service_Order*>(
               &_Service_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Service_Order* other);
  friend void swap(Service_Order& a, Service_Order& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_Order* New() const final {
    return CreateMaybeMessage<Service_Order>(NULL);
  }

  Service_Order* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_Order>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_Order& from);
  void MergeFrom(const Service_Order& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .be.protobuf.Service.Order orders = 6;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 6;
  ::be::protobuf::Service_Order* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >*
      mutable_orders();
  const ::be::protobuf::Service_Order& orders(int index) const;
  ::be::protobuf::Service_Order* add_orders();
  const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >&
      orders() const;

  // uint32 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // uint32 quantity = 2;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // uint64 price = 3;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  ::google::protobuf::uint64 price() const;
  void set_price(::google::protobuf::uint64 value);

  // uint64 order_id = 4;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 4;
  ::google::protobuf::uint64 order_id() const;
  void set_order_id(::google::protobuf::uint64 value);

  // uint32 trader_id = 5;
  void clear_trader_id();
  static const int kTraderIdFieldNumber = 5;
  ::google::protobuf::uint32 trader_id() const;
  void set_trader_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.Order)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order > orders_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint64 price_;
  ::google::protobuf::uint64 order_id_;
  ::google::protobuf::uint32 trader_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service_Quote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.Quote) */ {
 public:
  Service_Quote();
  virtual ~Service_Quote();

  Service_Quote(const Service_Quote& from);

  inline Service_Quote& operator=(const Service_Quote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_Quote(Service_Quote&& from) noexcept
    : Service_Quote() {
    *this = ::std::move(from);
  }

  inline Service_Quote& operator=(Service_Quote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_Quote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_Quote* internal_default_instance() {
    return reinterpret_cast<const Service_Quote*>(
               &_Service_Quote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Service_Quote* other);
  friend void swap(Service_Quote& a, Service_Quote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_Quote* New() const final {
    return CreateMaybeMessage<Service_Quote>(NULL);
  }

  Service_Quote* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_Quote>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_Quote& from);
  void MergeFrom(const Service_Quote& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_Quote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes order_type = 1;
  void clear_order_type();
  static const int kOrderTypeFieldNumber = 1;
  const ::std::string& order_type() const;
  void set_order_type(const ::std::string& value);
  #if LANG_CXX11
  void set_order_type(::std::string&& value);
  #endif
  void set_order_type(const char* value);
  void set_order_type(const void* value, size_t size);
  ::std::string* mutable_order_type();
  ::std::string* release_order_type();
  void set_allocated_order_type(::std::string* order_type);

  // bytes order_side = 2;
  void clear_order_side();
  static const int kOrderSideFieldNumber = 2;
  const ::std::string& order_side() const;
  void set_order_side(const ::std::string& value);
  #if LANG_CXX11
  void set_order_side(::std::string&& value);
  #endif
  void set_order_side(const char* value);
  void set_order_side(const void* value, size_t size);
  ::std::string* mutable_order_side();
  ::std::string* release_order_side();
  void set_allocated_order_side(::std::string* order_side);

  // .be.protobuf.Service.Order order = 3;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  private:
  const ::be::protobuf::Service_Order& _internal_order() const;
  public:
  const ::be::protobuf::Service_Order& order() const;
  ::be::protobuf::Service_Order* release_order();
  ::be::protobuf::Service_Order* mutable_order();
  void set_allocated_order(::be::protobuf::Service_Order* order);

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.Quote)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr order_type_;
  ::google::protobuf::internal::ArenaStringPtr order_side_;
  ::be::protobuf::Service_Order* order_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service_QuoteList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.QuoteList) */ {
 public:
  Service_QuoteList();
  virtual ~Service_QuoteList();

  Service_QuoteList(const Service_QuoteList& from);

  inline Service_QuoteList& operator=(const Service_QuoteList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_QuoteList(Service_QuoteList&& from) noexcept
    : Service_QuoteList() {
    *this = ::std::move(from);
  }

  inline Service_QuoteList& operator=(Service_QuoteList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_QuoteList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_QuoteList* internal_default_instance() {
    return reinterpret_cast<const Service_QuoteList*>(
               &_Service_QuoteList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Service_QuoteList* other);
  friend void swap(Service_QuoteList& a, Service_QuoteList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_QuoteList* New() const final {
    return CreateMaybeMessage<Service_QuoteList>(NULL);
  }

  Service_QuoteList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_QuoteList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_QuoteList& from);
  void MergeFrom(const Service_QuoteList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_QuoteList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .be.protobuf.Service.Quote quotes = 1;
  int quotes_size() const;
  void clear_quotes();
  static const int kQuotesFieldNumber = 1;
  ::be::protobuf::Service_Quote* mutable_quotes(int index);
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Quote >*
      mutable_quotes();
  const ::be::protobuf::Service_Quote& quotes(int index) const;
  ::be::protobuf::Service_Quote* add_quotes();
  const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Quote >&
      quotes() const;

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.QuoteList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Quote > quotes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service_OrderList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.OrderList) */ {
 public:
  Service_OrderList();
  virtual ~Service_OrderList();

  Service_OrderList(const Service_OrderList& from);

  inline Service_OrderList& operator=(const Service_OrderList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_OrderList(Service_OrderList&& from) noexcept
    : Service_OrderList() {
    *this = ::std::move(from);
  }

  inline Service_OrderList& operator=(Service_OrderList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_OrderList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_OrderList* internal_default_instance() {
    return reinterpret_cast<const Service_OrderList*>(
               &_Service_OrderList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Service_OrderList* other);
  friend void swap(Service_OrderList& a, Service_OrderList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_OrderList* New() const final {
    return CreateMaybeMessage<Service_OrderList>(NULL);
  }

  Service_OrderList* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_OrderList>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_OrderList& from);
  void MergeFrom(const Service_OrderList& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_OrderList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .be.protobuf.Service.Order orders = 1;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 1;
  ::be::protobuf::Service_Order* mutable_orders(int index);
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >*
      mutable_orders();
  const ::be::protobuf::Service_Order& orders(int index) const;
  ::be::protobuf::Service_Order* add_orders();
  const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >&
      orders() const;

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.OrderList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order > orders_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service_OrderBook_BidsMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Service_OrderBook_BidsMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Service_OrderBook_BidsMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Service_OrderBook_BidsMapEntry_DoNotUse();
  Service_OrderBook_BidsMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Service_OrderBook_BidsMapEntry_DoNotUse& other);
  static const Service_OrderBook_BidsMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Service_OrderBook_BidsMapEntry_DoNotUse*>(&_Service_OrderBook_BidsMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Service_OrderBook_AsksMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Service_OrderBook_AsksMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Service_OrderBook_AsksMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Service_OrderBook_AsksMapEntry_DoNotUse();
  Service_OrderBook_AsksMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Service_OrderBook_AsksMapEntry_DoNotUse& other);
  static const Service_OrderBook_AsksMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Service_OrderBook_AsksMapEntry_DoNotUse*>(&_Service_OrderBook_AsksMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Service_OrderBook : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.OrderBook) */ {
 public:
  Service_OrderBook();
  virtual ~Service_OrderBook();

  Service_OrderBook(const Service_OrderBook& from);

  inline Service_OrderBook& operator=(const Service_OrderBook& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_OrderBook(Service_OrderBook&& from) noexcept
    : Service_OrderBook() {
    *this = ::std::move(from);
  }

  inline Service_OrderBook& operator=(Service_OrderBook&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_OrderBook& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_OrderBook* internal_default_instance() {
    return reinterpret_cast<const Service_OrderBook*>(
               &_Service_OrderBook_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Service_OrderBook* other);
  friend void swap(Service_OrderBook& a, Service_OrderBook& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_OrderBook* New() const final {
    return CreateMaybeMessage<Service_OrderBook>(NULL);
  }

  Service_OrderBook* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_OrderBook>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_OrderBook& from);
  void MergeFrom(const Service_OrderBook& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_OrderBook* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
  int bids_map_size() const;
  void clear_bids_map();
  static const int kBidsMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
      bids_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
      mutable_bids_map();

  // map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
  int asks_map_size() const;
  void clear_asks_map();
  static const int kAsksMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
      asks_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
      mutable_asks_map();

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.OrderBook)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Service_OrderBook_BidsMapEntry_DoNotUse,
      ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bids_map_;
  ::google::protobuf::internal::MapField<
      Service_OrderBook_AsksMapEntry_DoNotUse,
      ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > asks_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service_OrderTree_PriceMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Service_OrderTree_PriceMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Service_OrderTree_PriceMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Service_OrderTree_PriceMapEntry_DoNotUse();
  Service_OrderTree_PriceMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Service_OrderTree_PriceMapEntry_DoNotUse& other);
  static const Service_OrderTree_PriceMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Service_OrderTree_PriceMapEntry_DoNotUse*>(&_Service_OrderTree_PriceMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Service_OrderTree_OrderMapEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Service_OrderTree_OrderMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_Order,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Service_OrderTree_OrderMapEntry_DoNotUse, 
    ::google::protobuf::uint64, ::be::protobuf::Service_Order,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  Service_OrderTree_OrderMapEntry_DoNotUse();
  Service_OrderTree_OrderMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Service_OrderTree_OrderMapEntry_DoNotUse& other);
  static const Service_OrderTree_OrderMapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Service_OrderTree_OrderMapEntry_DoNotUse*>(&_Service_OrderTree_OrderMapEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Service_OrderTree : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service.OrderTree) */ {
 public:
  Service_OrderTree();
  virtual ~Service_OrderTree();

  Service_OrderTree(const Service_OrderTree& from);

  inline Service_OrderTree& operator=(const Service_OrderTree& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service_OrderTree(Service_OrderTree&& from) noexcept
    : Service_OrderTree() {
    *this = ::std::move(from);
  }

  inline Service_OrderTree& operator=(Service_OrderTree&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service_OrderTree& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service_OrderTree* internal_default_instance() {
    return reinterpret_cast<const Service_OrderTree*>(
               &_Service_OrderTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Service_OrderTree* other);
  friend void swap(Service_OrderTree& a, Service_OrderTree& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service_OrderTree* New() const final {
    return CreateMaybeMessage<Service_OrderTree>(NULL);
  }

  Service_OrderTree* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service_OrderTree>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service_OrderTree& from);
  void MergeFrom(const Service_OrderTree& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service_OrderTree* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
  int price_map_size() const;
  void clear_price_map();
  static const int kPriceMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
      price_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
      mutable_price_map();

  // map<uint64, .be.protobuf.Service.Order> order_map = 2;
  int order_map_size() const;
  void clear_order_map();
  static const int kOrderMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >&
      order_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >*
      mutable_order_map();

  // @@protoc_insertion_point(class_scope:be.protobuf.Service.OrderTree)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Service_OrderTree_PriceMapEntry_DoNotUse,
      ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > price_map_;
  ::google::protobuf::internal::MapField<
      Service_OrderTree_OrderMapEntry_DoNotUse,
      ::google::protobuf::uint64, ::be::protobuf::Service_Order,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > order_map_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Service : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:be.protobuf.Service) */ {
 public:
  Service();
  virtual ~Service();

  Service(const Service& from);

  inline Service& operator=(const Service& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service(Service&& from) noexcept
    : Service() {
    *this = ::std::move(from);
  }

  inline Service& operator=(Service&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service* internal_default_instance() {
    return reinterpret_cast<const Service*>(
               &_Service_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(Service* other);
  friend void swap(Service& a, Service& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service* New() const final {
    return CreateMaybeMessage<Service>(NULL);
  }

  Service* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service& from);
  void MergeFrom(const Service& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Service_Order Order;
  typedef Service_Quote Quote;
  typedef Service_QuoteList QuoteList;
  typedef Service_OrderList OrderList;
  typedef Service_OrderBook OrderBook;
  typedef Service_OrderTree OrderTree;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:be.protobuf.Service)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Service_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Service_Order

// uint32 timestamp = 1;
inline void Service_Order::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 Service_Order::timestamp() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.timestamp)
  return timestamp_;
}
inline void Service_Order::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Order.timestamp)
}

// uint32 quantity = 2;
inline void Service_Order::clear_quantity() {
  quantity_ = 0u;
}
inline ::google::protobuf::uint32 Service_Order::quantity() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.quantity)
  return quantity_;
}
inline void Service_Order::set_quantity(::google::protobuf::uint32 value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Order.quantity)
}

// uint64 price = 3;
inline void Service_Order::clear_price() {
  price_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Service_Order::price() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.price)
  return price_;
}
inline void Service_Order::set_price(::google::protobuf::uint64 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Order.price)
}

// uint64 order_id = 4;
inline void Service_Order::clear_order_id() {
  order_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Service_Order::order_id() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.order_id)
  return order_id_;
}
inline void Service_Order::set_order_id(::google::protobuf::uint64 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Order.order_id)
}

// uint32 trader_id = 5;
inline void Service_Order::clear_trader_id() {
  trader_id_ = 0u;
}
inline ::google::protobuf::uint32 Service_Order::trader_id() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.trader_id)
  return trader_id_;
}
inline void Service_Order::set_trader_id(::google::protobuf::uint32 value) {
  
  trader_id_ = value;
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Order.trader_id)
}

// repeated .be.protobuf.Service.Order orders = 6;
inline int Service_Order::orders_size() const {
  return orders_.size();
}
inline void Service_Order::clear_orders() {
  orders_.Clear();
}
inline ::be::protobuf::Service_Order* Service_Order::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.Order.orders)
  return orders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >*
Service_Order::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:be.protobuf.Service.Order.orders)
  return &orders_;
}
inline const ::be::protobuf::Service_Order& Service_Order::orders(int index) const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Order.orders)
  return orders_.Get(index);
}
inline ::be::protobuf::Service_Order* Service_Order::add_orders() {
  // @@protoc_insertion_point(field_add:be.protobuf.Service.Order.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >&
Service_Order::orders() const {
  // @@protoc_insertion_point(field_list:be.protobuf.Service.Order.orders)
  return orders_;
}

// -------------------------------------------------------------------

// Service_Quote

// bytes order_type = 1;
inline void Service_Quote::clear_order_type() {
  order_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service_Quote::order_type() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Quote.order_type)
  return order_type_.GetNoArena();
}
inline void Service_Quote::set_order_type(const ::std::string& value) {
  
  order_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Quote.order_type)
}
#if LANG_CXX11
inline void Service_Quote::set_order_type(::std::string&& value) {
  
  order_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:be.protobuf.Service.Quote.order_type)
}
#endif
inline void Service_Quote::set_order_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:be.protobuf.Service.Quote.order_type)
}
inline void Service_Quote::set_order_type(const void* value, size_t size) {
  
  order_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:be.protobuf.Service.Quote.order_type)
}
inline ::std::string* Service_Quote::mutable_order_type() {
  
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.Quote.order_type)
  return order_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service_Quote::release_order_type() {
  // @@protoc_insertion_point(field_release:be.protobuf.Service.Quote.order_type)
  
  return order_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service_Quote::set_allocated_order_type(::std::string* order_type) {
  if (order_type != NULL) {
    
  } else {
    
  }
  order_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_type);
  // @@protoc_insertion_point(field_set_allocated:be.protobuf.Service.Quote.order_type)
}

// bytes order_side = 2;
inline void Service_Quote::clear_order_side() {
  order_side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service_Quote::order_side() const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Quote.order_side)
  return order_side_.GetNoArena();
}
inline void Service_Quote::set_order_side(const ::std::string& value) {
  
  order_side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:be.protobuf.Service.Quote.order_side)
}
#if LANG_CXX11
inline void Service_Quote::set_order_side(::std::string&& value) {
  
  order_side_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:be.protobuf.Service.Quote.order_side)
}
#endif
inline void Service_Quote::set_order_side(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:be.protobuf.Service.Quote.order_side)
}
inline void Service_Quote::set_order_side(const void* value, size_t size) {
  
  order_side_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:be.protobuf.Service.Quote.order_side)
}
inline ::std::string* Service_Quote::mutable_order_side() {
  
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.Quote.order_side)
  return order_side_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service_Quote::release_order_side() {
  // @@protoc_insertion_point(field_release:be.protobuf.Service.Quote.order_side)
  
  return order_side_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service_Quote::set_allocated_order_side(::std::string* order_side) {
  if (order_side != NULL) {
    
  } else {
    
  }
  order_side_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_side);
  // @@protoc_insertion_point(field_set_allocated:be.protobuf.Service.Quote.order_side)
}

// .be.protobuf.Service.Order order = 3;
inline bool Service_Quote::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline void Service_Quote::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
}
inline const ::be::protobuf::Service_Order& Service_Quote::_internal_order() const {
  return *order_;
}
inline const ::be::protobuf::Service_Order& Service_Quote::order() const {
  const ::be::protobuf::Service_Order* p = order_;
  // @@protoc_insertion_point(field_get:be.protobuf.Service.Quote.order)
  return p != NULL ? *p : *reinterpret_cast<const ::be::protobuf::Service_Order*>(
      &::be::protobuf::_Service_Order_default_instance_);
}
inline ::be::protobuf::Service_Order* Service_Quote::release_order() {
  // @@protoc_insertion_point(field_release:be.protobuf.Service.Quote.order)
  
  ::be::protobuf::Service_Order* temp = order_;
  order_ = NULL;
  return temp;
}
inline ::be::protobuf::Service_Order* Service_Quote::mutable_order() {
  
  if (order_ == NULL) {
    auto* p = CreateMaybeMessage<::be::protobuf::Service_Order>(GetArenaNoVirtual());
    order_ = p;
  }
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.Quote.order)
  return order_;
}
inline void Service_Quote::set_allocated_order(::be::protobuf::Service_Order* order) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete order_;
  }
  if (order) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      order = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:be.protobuf.Service.Quote.order)
}

// -------------------------------------------------------------------

// Service_QuoteList

// repeated .be.protobuf.Service.Quote quotes = 1;
inline int Service_QuoteList::quotes_size() const {
  return quotes_.size();
}
inline void Service_QuoteList::clear_quotes() {
  quotes_.Clear();
}
inline ::be::protobuf::Service_Quote* Service_QuoteList::mutable_quotes(int index) {
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.QuoteList.quotes)
  return quotes_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Quote >*
Service_QuoteList::mutable_quotes() {
  // @@protoc_insertion_point(field_mutable_list:be.protobuf.Service.QuoteList.quotes)
  return &quotes_;
}
inline const ::be::protobuf::Service_Quote& Service_QuoteList::quotes(int index) const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.QuoteList.quotes)
  return quotes_.Get(index);
}
inline ::be::protobuf::Service_Quote* Service_QuoteList::add_quotes() {
  // @@protoc_insertion_point(field_add:be.protobuf.Service.QuoteList.quotes)
  return quotes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Quote >&
Service_QuoteList::quotes() const {
  // @@protoc_insertion_point(field_list:be.protobuf.Service.QuoteList.quotes)
  return quotes_;
}

// -------------------------------------------------------------------

// Service_OrderList

// repeated .be.protobuf.Service.Order orders = 1;
inline int Service_OrderList::orders_size() const {
  return orders_.size();
}
inline void Service_OrderList::clear_orders() {
  orders_.Clear();
}
inline ::be::protobuf::Service_Order* Service_OrderList::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:be.protobuf.Service.OrderList.orders)
  return orders_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >*
Service_OrderList::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:be.protobuf.Service.OrderList.orders)
  return &orders_;
}
inline const ::be::protobuf::Service_Order& Service_OrderList::orders(int index) const {
  // @@protoc_insertion_point(field_get:be.protobuf.Service.OrderList.orders)
  return orders_.Get(index);
}
inline ::be::protobuf::Service_Order* Service_OrderList::add_orders() {
  // @@protoc_insertion_point(field_add:be.protobuf.Service.OrderList.orders)
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::be::protobuf::Service_Order >&
Service_OrderList::orders() const {
  // @@protoc_insertion_point(field_list:be.protobuf.Service.OrderList.orders)
  return orders_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Service_OrderBook

// map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
inline int Service_OrderBook::bids_map_size() const {
  return bids_map_.size();
}
inline void Service_OrderBook::clear_bids_map() {
  bids_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
Service_OrderBook::bids_map() const {
  // @@protoc_insertion_point(field_map:be.protobuf.Service.OrderBook.bids_map)
  return bids_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
Service_OrderBook::mutable_bids_map() {
  // @@protoc_insertion_point(field_mutable_map:be.protobuf.Service.OrderBook.bids_map)
  return bids_map_.MutableMap();
}

// map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
inline int Service_OrderBook::asks_map_size() const {
  return asks_map_.size();
}
inline void Service_OrderBook::clear_asks_map() {
  asks_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
Service_OrderBook::asks_map() const {
  // @@protoc_insertion_point(field_map:be.protobuf.Service.OrderBook.asks_map)
  return asks_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
Service_OrderBook::mutable_asks_map() {
  // @@protoc_insertion_point(field_mutable_map:be.protobuf.Service.OrderBook.asks_map)
  return asks_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Service_OrderTree

// map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
inline int Service_OrderTree::price_map_size() const {
  return price_map_.size();
}
inline void Service_OrderTree::clear_price_map() {
  price_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >&
Service_OrderTree::price_map() const {
  // @@protoc_insertion_point(field_map:be.protobuf.Service.OrderTree.price_map)
  return price_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >*
Service_OrderTree::mutable_price_map() {
  // @@protoc_insertion_point(field_mutable_map:be.protobuf.Service.OrderTree.price_map)
  return price_map_.MutableMap();
}

// map<uint64, .be.protobuf.Service.Order> order_map = 2;
inline int Service_OrderTree::order_map_size() const {
  return order_map_.size();
}
inline void Service_OrderTree::clear_order_map() {
  order_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >&
Service_OrderTree::order_map() const {
  // @@protoc_insertion_point(field_map:be.protobuf.Service.OrderTree.order_map)
  return order_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >*
Service_OrderTree::mutable_order_map() {
  // @@protoc_insertion_point(field_mutable_map:be.protobuf.Service.OrderTree.order_map)
  return order_map_.MutableMap();
}

// -------------------------------------------------------------------

// Service

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace be

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Service_2eproto
