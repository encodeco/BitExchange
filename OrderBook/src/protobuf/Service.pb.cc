// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Service.proto

#include "Service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Service_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Service_Order;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderBook_AsksMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderBook_BidsMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderList;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderTree_OrderMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderTree_PriceMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Service_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Service_Quote;
}  // namespace protobuf_Service_2eproto
namespace be {
namespace protobuf {
class Service_OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_Order>
      _instance;
} _Service_Order_default_instance_;
class Service_QuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_Quote>
      _instance;
} _Service_Quote_default_instance_;
class Service_QuoteListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_QuoteList>
      _instance;
} _Service_QuoteList_default_instance_;
class Service_OrderListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderList>
      _instance;
} _Service_OrderList_default_instance_;
class Service_OrderBook_BidsMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderBook_BidsMapEntry_DoNotUse>
      _instance;
} _Service_OrderBook_BidsMapEntry_DoNotUse_default_instance_;
class Service_OrderBook_AsksMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderBook_AsksMapEntry_DoNotUse>
      _instance;
} _Service_OrderBook_AsksMapEntry_DoNotUse_default_instance_;
class Service_OrderBookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderBook>
      _instance;
} _Service_OrderBook_default_instance_;
class Service_OrderTree_PriceMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderTree_PriceMapEntry_DoNotUse>
      _instance;
} _Service_OrderTree_PriceMapEntry_DoNotUse_default_instance_;
class Service_OrderTree_OrderMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderTree_OrderMapEntry_DoNotUse>
      _instance;
} _Service_OrderTree_OrderMapEntry_DoNotUse_default_instance_;
class Service_OrderTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service_OrderTree>
      _instance;
} _Service_OrderTree_default_instance_;
class ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service>
      _instance;
} _Service_default_instance_;
}  // namespace protobuf
}  // namespace be
namespace protobuf_Service_2eproto {
static void InitDefaultsService_Order() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_Order_default_instance_;
    new (ptr) ::be::protobuf::Service_Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_Order::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Service_Order =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsService_Order}, {}};

static void InitDefaultsService_Quote() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_Quote_default_instance_;
    new (ptr) ::be::protobuf::Service_Quote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_Quote::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_Quote =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_Quote}, {
      &protobuf_Service_2eproto::scc_info_Service_Order.base,}};

static void InitDefaultsService_QuoteList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_QuoteList_default_instance_;
    new (ptr) ::be::protobuf::Service_QuoteList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_QuoteList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_QuoteList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_QuoteList}, {
      &protobuf_Service_2eproto::scc_info_Service_Quote.base,}};

static void InitDefaultsService_OrderList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderList_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_OrderList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_OrderList}, {
      &protobuf_Service_2eproto::scc_info_Service_Order.base,}};

static void InitDefaultsService_OrderBook_BidsMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderBook_BidsMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse();
  }
  ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderBook_BidsMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_OrderBook_BidsMapEntry_DoNotUse}, {
      &protobuf_Service_2eproto::scc_info_Service_OrderList.base,}};

static void InitDefaultsService_OrderBook_AsksMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderBook_AsksMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse();
  }
  ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderBook_AsksMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_OrderBook_AsksMapEntry_DoNotUse}, {
      &protobuf_Service_2eproto::scc_info_Service_OrderList.base,}};

static void InitDefaultsService_OrderBook() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderBook_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderBook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_OrderBook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Service_OrderBook =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsService_OrderBook}, {
      &protobuf_Service_2eproto::scc_info_Service_OrderBook_BidsMapEntry_DoNotUse.base,
      &protobuf_Service_2eproto::scc_info_Service_OrderBook_AsksMapEntry_DoNotUse.base,}};

static void InitDefaultsService_OrderTree_PriceMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderTree_PriceMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse();
  }
  ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderTree_PriceMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_OrderTree_PriceMapEntry_DoNotUse}, {
      &protobuf_Service_2eproto::scc_info_Service_OrderList.base,}};

static void InitDefaultsService_OrderTree_OrderMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderTree_OrderMapEntry_DoNotUse_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse();
  }
  ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Service_OrderTree_OrderMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsService_OrderTree_OrderMapEntry_DoNotUse}, {
      &protobuf_Service_2eproto::scc_info_Service_Order.base,}};

static void InitDefaultsService_OrderTree() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_OrderTree_default_instance_;
    new (ptr) ::be::protobuf::Service_OrderTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service_OrderTree::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Service_OrderTree =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsService_OrderTree}, {
      &protobuf_Service_2eproto::scc_info_Service_OrderTree_PriceMapEntry_DoNotUse.base,
      &protobuf_Service_2eproto::scc_info_Service_OrderTree_OrderMapEntry_DoNotUse.base,}};

static void InitDefaultsService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::be::protobuf::_Service_default_instance_;
    new (ptr) ::be::protobuf::Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::be::protobuf::Service::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Service =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsService}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Service_Order.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_Quote.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_QuoteList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderBook_BidsMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderBook_AsksMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderBook.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderTree_PriceMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderTree_OrderMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service_OrderTree.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Service.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, trader_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Order, orders_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Quote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Quote, order_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Quote, order_side_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_Quote, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_QuoteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_QuoteList, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderList, orders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook, bids_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderBook, asks_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree, price_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service_OrderTree, order_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::be::protobuf::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::be::protobuf::Service_Order)},
  { 11, -1, sizeof(::be::protobuf::Service_Quote)},
  { 19, -1, sizeof(::be::protobuf::Service_QuoteList)},
  { 25, -1, sizeof(::be::protobuf::Service_OrderList)},
  { 31, 38, sizeof(::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse)},
  { 40, 47, sizeof(::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse)},
  { 49, -1, sizeof(::be::protobuf::Service_OrderBook)},
  { 56, 63, sizeof(::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse)},
  { 65, 72, sizeof(::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse)},
  { 74, -1, sizeof(::be::protobuf::Service_OrderTree)},
  { 81, -1, sizeof(::be::protobuf::Service)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_Quote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_QuoteList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderBook_BidsMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderBook_AsksMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderBook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderTree_PriceMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderTree_OrderMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_OrderTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::be::protobuf::_Service_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rService.proto\022\013be.protobuf\"\300\007\n\007Service"
      "\032\214\001\n\005Order\022\021\n\ttimestamp\030\001 \001(\r\022\020\n\010quantit"
      "y\030\002 \001(\r\022\r\n\005price\030\003 \001(\004\022\020\n\010order_id\030\004 \001(\004"
      "\022\021\n\ttrader_id\030\005 \001(\r\022*\n\006orders\030\006 \003(\0132\032.be"
      ".protobuf.Service.Order\032Z\n\005Quote\022\022\n\norde"
      "r_type\030\001 \001(\014\022\022\n\norder_side\030\002 \001(\014\022)\n\005orde"
      "r\030\003 \001(\0132\032.be.protobuf.Service.Order\0327\n\tQ"
      "uoteList\022*\n\006quotes\030\001 \003(\0132\032.be.protobuf.S"
      "ervice.Quote\0327\n\tOrderList\022*\n\006orders\030\001 \003("
      "\0132\032.be.protobuf.Service.Order\032\251\002\n\tOrderB"
      "ook\022=\n\010bids_map\030\001 \003(\0132+.be.protobuf.Serv"
      "ice.OrderBook.BidsMapEntry\022=\n\010asks_map\030\002"
      " \003(\0132+.be.protobuf.Service.OrderBook.Ask"
      "sMapEntry\032N\n\014BidsMapEntry\022\013\n\003key\030\001 \001(\004\022-"
      "\n\005value\030\002 \001(\0132\036.be.protobuf.Service.Orde"
      "rList:\0028\001\032N\n\014AsksMapEntry\022\013\n\003key\030\001 \001(\004\022-"
      "\n\005value\030\002 \001(\0132\036.be.protobuf.Service.Orde"
      "rList:\0028\001\032\253\002\n\tOrderTree\022\?\n\tprice_map\030\001 \003"
      "(\0132,.be.protobuf.Service.OrderTree.Price"
      "MapEntry\022\?\n\torder_map\030\002 \003(\0132,.be.protobu"
      "f.Service.OrderTree.OrderMapEntry\032O\n\rPri"
      "ceMapEntry\022\013\n\003key\030\001 \001(\004\022-\n\005value\030\002 \001(\0132\036"
      ".be.protobuf.Service.OrderList:\0028\001\032K\n\rOr"
      "derMapEntry\022\013\n\003key\030\001 \001(\004\022)\n\005value\030\002 \001(\0132"
      "\032.be.protobuf.Service.Order:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 999);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Service.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Service_2eproto
namespace be {
namespace protobuf {

// ===================================================================

void Service_Order::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_Order::kTimestampFieldNumber;
const int Service_Order::kQuantityFieldNumber;
const int Service_Order::kPriceFieldNumber;
const int Service_Order::kOrderIdFieldNumber;
const int Service_Order::kTraderIdFieldNumber;
const int Service_Order::kOrdersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_Order::Service_Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_Order.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.Order)
}
Service_Order::Service_Order(const Service_Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&trader_id_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(trader_id_));
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.Order)
}

void Service_Order::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trader_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(trader_id_));
}

Service_Order::~Service_Order() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.Order)
  SharedDtor();
}

void Service_Order::SharedDtor() {
}

void Service_Order::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_Order::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_Order& Service_Order::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_Order.base);
  return *internal_default_instance();
}


void Service_Order::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trader_id_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(trader_id_));
  _internal_metadata_.Clear();
}

bool Service_Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.Order)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 order_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 trader_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trader_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .be.protobuf.Service.Order orders = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.Order)
  return false;
#undef DO_
}

void Service_Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->price(), output);
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->order_id(), output);
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->trader_id(), output);
  }

  // repeated .be.protobuf.Service.Order orders = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->orders(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.Order)
}

::google::protobuf::uint8* Service_Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->price(), target);
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->order_id(), target);
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->trader_id(), target);
  }

  // repeated .be.protobuf.Service.Order orders = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->orders(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.Order)
  return target;
}

size_t Service_Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.Order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.protobuf.Service.Order orders = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  // uint32 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  // uint32 quantity = 2;
  if (this->quantity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quantity());
  }

  // uint64 price = 3;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->price());
  }

  // uint64 order_id = 4;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->order_id());
  }

  // uint32 trader_id = 5;
  if (this->trader_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trader_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.Order)
    MergeFrom(*source);
  }
}

void Service_Order::MergeFrom(const Service_Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.quantity() != 0) {
    set_quantity(from.quantity());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
  if (from.trader_id() != 0) {
    set_trader_id(from.trader_id());
  }
}

void Service_Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_Order::CopyFrom(const Service_Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_Order::IsInitialized() const {
  return true;
}

void Service_Order::Swap(Service_Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_Order::InternalSwap(Service_Order* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  swap(timestamp_, other->timestamp_);
  swap(quantity_, other->quantity_);
  swap(price_, other->price_);
  swap(order_id_, other->order_id_);
  swap(trader_id_, other->trader_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_Order::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service_Quote::InitAsDefaultInstance() {
  ::be::protobuf::_Service_Quote_default_instance_._instance.get_mutable()->order_ = const_cast< ::be::protobuf::Service_Order*>(
      ::be::protobuf::Service_Order::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_Quote::kOrderTypeFieldNumber;
const int Service_Quote::kOrderSideFieldNumber;
const int Service_Quote::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_Quote::Service_Quote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_Quote.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.Quote)
}
Service_Quote::Service_Quote(const Service_Quote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_type().size() > 0) {
    order_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_type_);
  }
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.order_side().size() > 0) {
    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  if (from.has_order()) {
    order_ = new ::be::protobuf::Service_Order(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.Quote)
}

void Service_Quote::SharedCtor() {
  order_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = NULL;
}

Service_Quote::~Service_Quote() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.Quote)
  SharedDtor();
}

void Service_Quote::SharedDtor() {
  order_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete order_;
}

void Service_Quote::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_Quote::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_Quote& Service_Quote::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_Quote.base);
  return *internal_default_instance();
}


void Service_Quote::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_side_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  _internal_metadata_.Clear();
}

bool Service_Quote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.Quote)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes order_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes order_side = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_order_side()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .be.protobuf.Service.Order order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.Quote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.Quote)
  return false;
#undef DO_
}

void Service_Quote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->order_type(), output);
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->order_side(), output);
  }

  // .be.protobuf.Service.Order order = 3;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_order(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.Quote)
}

::google::protobuf::uint8* Service_Quote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.Quote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->order_type(), target);
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->order_side(), target);
  }

  // .be.protobuf.Service.Order order = 3;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_order(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.Quote)
  return target;
}

size_t Service_Quote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.Quote)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes order_type = 1;
  if (this->order_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_type());
  }

  // bytes order_side = 2;
  if (this->order_side().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->order_side());
  }

  // .be.protobuf.Service.Order order = 3;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *order_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_Quote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_Quote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_Quote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.Quote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.Quote)
    MergeFrom(*source);
  }
}

void Service_Quote::MergeFrom(const Service_Quote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.Quote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_type().size() > 0) {

    order_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_type_);
  }
  if (from.order_side().size() > 0) {

    order_side_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_side_);
  }
  if (from.has_order()) {
    mutable_order()->::be::protobuf::Service_Order::MergeFrom(from.order());
  }
}

void Service_Quote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_Quote::CopyFrom(const Service_Quote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_Quote::IsInitialized() const {
  return true;
}

void Service_Quote::Swap(Service_Quote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_Quote::InternalSwap(Service_Quote* other) {
  using std::swap;
  order_type_.Swap(&other->order_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_side_.Swap(&other->order_side_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(order_, other->order_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_Quote::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service_QuoteList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_QuoteList::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_QuoteList::Service_QuoteList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_QuoteList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.QuoteList)
}
Service_QuoteList::Service_QuoteList(const Service_QuoteList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.QuoteList)
}

void Service_QuoteList::SharedCtor() {
}

Service_QuoteList::~Service_QuoteList() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.QuoteList)
  SharedDtor();
}

void Service_QuoteList::SharedDtor() {
}

void Service_QuoteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_QuoteList::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_QuoteList& Service_QuoteList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_QuoteList.base);
  return *internal_default_instance();
}


void Service_QuoteList::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  _internal_metadata_.Clear();
}

bool Service_QuoteList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.QuoteList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .be.protobuf.Service.Quote quotes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quotes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.QuoteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.QuoteList)
  return false;
#undef DO_
}

void Service_QuoteList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.protobuf.Service.Quote quotes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->quotes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.QuoteList)
}

::google::protobuf::uint8* Service_QuoteList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.QuoteList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.protobuf.Service.Quote quotes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quotes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->quotes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.QuoteList)
  return target;
}

size_t Service_QuoteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.QuoteList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.protobuf.Service.Quote quotes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->quotes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quotes(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_QuoteList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.QuoteList)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_QuoteList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_QuoteList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.QuoteList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.QuoteList)
    MergeFrom(*source);
  }
}

void Service_QuoteList::MergeFrom(const Service_QuoteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.QuoteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
}

void Service_QuoteList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.QuoteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_QuoteList::CopyFrom(const Service_QuoteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.QuoteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_QuoteList::IsInitialized() const {
  return true;
}

void Service_QuoteList::Swap(Service_QuoteList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_QuoteList::InternalSwap(Service_QuoteList* other) {
  using std::swap;
  CastToBase(&quotes_)->InternalSwap(CastToBase(&other->quotes_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_QuoteList::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service_OrderList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_OrderList::kOrdersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_OrderList::Service_OrderList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_OrderList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.OrderList)
}
Service_OrderList::Service_OrderList(const Service_OrderList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.OrderList)
}

void Service_OrderList::SharedCtor() {
}

Service_OrderList::~Service_OrderList() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.OrderList)
  SharedDtor();
}

void Service_OrderList::SharedDtor() {
}

void Service_OrderList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_OrderList::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_OrderList& Service_OrderList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_OrderList.base);
  return *internal_default_instance();
}


void Service_OrderList::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  _internal_metadata_.Clear();
}

bool Service_OrderList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.OrderList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .be.protobuf.Service.Order orders = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.OrderList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.OrderList)
  return false;
#undef DO_
}

void Service_OrderList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.protobuf.Service.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->orders(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.OrderList)
}

::google::protobuf::uint8* Service_OrderList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.OrderList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .be.protobuf.Service.Order orders = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->orders(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.OrderList)
  return target;
}

size_t Service_OrderList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.OrderList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .be.protobuf.Service.Order orders = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_OrderList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_OrderList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_OrderList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.OrderList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.OrderList)
    MergeFrom(*source);
  }
}

void Service_OrderList::MergeFrom(const Service_OrderList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.OrderList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
}

void Service_OrderList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_OrderList::CopyFrom(const Service_OrderList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.OrderList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_OrderList::IsInitialized() const {
  return true;
}

void Service_OrderList::Swap(Service_OrderList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_OrderList::InternalSwap(Service_OrderList* other) {
  using std::swap;
  CastToBase(&orders_)->InternalSwap(CastToBase(&other->orders_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_OrderList::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Service_OrderBook_BidsMapEntry_DoNotUse::Service_OrderBook_BidsMapEntry_DoNotUse() {}
Service_OrderBook_BidsMapEntry_DoNotUse::Service_OrderBook_BidsMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Service_OrderBook_BidsMapEntry_DoNotUse::MergeFrom(const Service_OrderBook_BidsMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Service_OrderBook_BidsMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[4];
}
void Service_OrderBook_BidsMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Service_OrderBook_AsksMapEntry_DoNotUse::Service_OrderBook_AsksMapEntry_DoNotUse() {}
Service_OrderBook_AsksMapEntry_DoNotUse::Service_OrderBook_AsksMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Service_OrderBook_AsksMapEntry_DoNotUse::MergeFrom(const Service_OrderBook_AsksMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Service_OrderBook_AsksMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[5];
}
void Service_OrderBook_AsksMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Service_OrderBook::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_OrderBook::kBidsMapFieldNumber;
const int Service_OrderBook::kAsksMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_OrderBook::Service_OrderBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_OrderBook.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.OrderBook)
}
Service_OrderBook::Service_OrderBook(const Service_OrderBook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bids_map_.MergeFrom(from.bids_map_);
  asks_map_.MergeFrom(from.asks_map_);
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.OrderBook)
}

void Service_OrderBook::SharedCtor() {
}

Service_OrderBook::~Service_OrderBook() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.OrderBook)
  SharedDtor();
}

void Service_OrderBook::SharedDtor() {
}

void Service_OrderBook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_OrderBook::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_OrderBook& Service_OrderBook::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_OrderBook.base);
  return *internal_default_instance();
}


void Service_OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bids_map_.Clear();
  asks_map_.Clear();
  _internal_metadata_.Clear();
}

bool Service_OrderBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.OrderBook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Service_OrderBook_BidsMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Service_OrderBook_BidsMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList > > parser(&bids_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Service_OrderBook_AsksMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Service_OrderBook_AsksMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList > > parser(&asks_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.OrderBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.OrderBook)
  return false;
#undef DO_
}

void Service_OrderBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
  if (!this->bids_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bids_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bids_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->bids_map().begin();
          it != this->bids_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderBook_BidsMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bids_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<Service_OrderBook_BidsMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->bids_map().begin();
          it != this->bids_map().end(); ++it) {
        entry.reset(bids_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
  if (!this->asks_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->asks_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->asks_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->asks_map().begin();
          it != this->asks_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderBook_AsksMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(asks_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<Service_OrderBook_AsksMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->asks_map().begin();
          it != this->asks_map().end(); ++it) {
        entry.reset(asks_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.OrderBook)
}

::google::protobuf::uint8* Service_OrderBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
  if (!this->bids_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->bids_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bids_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->bids_map().begin();
          it != this->bids_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderBook_BidsMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bids_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Service_OrderBook_BidsMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->bids_map().begin();
          it != this->bids_map().end(); ++it) {
        entry.reset(bids_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
  if (!this->asks_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->asks_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->asks_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->asks_map().begin();
          it != this->asks_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderBook_AsksMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(asks_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Service_OrderBook_AsksMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->asks_map().begin();
          it != this->asks_map().end(); ++it) {
        entry.reset(asks_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.OrderBook)
  return target;
}

size_t Service_OrderBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.OrderBook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .be.protobuf.Service.OrderList> bids_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bids_map_size());
  {
    ::std::unique_ptr<Service_OrderBook_BidsMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
        it = this->bids_map().begin();
        it != this->bids_map().end(); ++it) {
      entry.reset(bids_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint64, .be.protobuf.Service.OrderList> asks_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->asks_map_size());
  {
    ::std::unique_ptr<Service_OrderBook_AsksMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
        it = this->asks_map().begin();
        it != this->asks_map().end(); ++it) {
      entry.reset(asks_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_OrderBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_OrderBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_OrderBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.OrderBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.OrderBook)
    MergeFrom(*source);
  }
}

void Service_OrderBook::MergeFrom(const Service_OrderBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bids_map_.MergeFrom(from.bids_map_);
  asks_map_.MergeFrom(from.asks_map_);
}

void Service_OrderBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_OrderBook::CopyFrom(const Service_OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_OrderBook::IsInitialized() const {
  return true;
}

void Service_OrderBook::Swap(Service_OrderBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_OrderBook::InternalSwap(Service_OrderBook* other) {
  using std::swap;
  bids_map_.Swap(&other->bids_map_);
  asks_map_.Swap(&other->asks_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_OrderBook::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Service_OrderTree_PriceMapEntry_DoNotUse::Service_OrderTree_PriceMapEntry_DoNotUse() {}
Service_OrderTree_PriceMapEntry_DoNotUse::Service_OrderTree_PriceMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Service_OrderTree_PriceMapEntry_DoNotUse::MergeFrom(const Service_OrderTree_PriceMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Service_OrderTree_PriceMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[7];
}
void Service_OrderTree_PriceMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Service_OrderTree_OrderMapEntry_DoNotUse::Service_OrderTree_OrderMapEntry_DoNotUse() {}
Service_OrderTree_OrderMapEntry_DoNotUse::Service_OrderTree_OrderMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Service_OrderTree_OrderMapEntry_DoNotUse::MergeFrom(const Service_OrderTree_OrderMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Service_OrderTree_OrderMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[8];
}
void Service_OrderTree_OrderMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Service_OrderTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service_OrderTree::kPriceMapFieldNumber;
const int Service_OrderTree::kOrderMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service_OrderTree::Service_OrderTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service_OrderTree.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service.OrderTree)
}
Service_OrderTree::Service_OrderTree(const Service_OrderTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  price_map_.MergeFrom(from.price_map_);
  order_map_.MergeFrom(from.order_map_);
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service.OrderTree)
}

void Service_OrderTree::SharedCtor() {
}

Service_OrderTree::~Service_OrderTree() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service.OrderTree)
  SharedDtor();
}

void Service_OrderTree::SharedDtor() {
}

void Service_OrderTree::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service_OrderTree::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service_OrderTree& Service_OrderTree::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service_OrderTree.base);
  return *internal_default_instance();
}


void Service_OrderTree::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  price_map_.Clear();
  order_map_.Clear();
  _internal_metadata_.Clear();
}

bool Service_OrderTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service.OrderTree)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Service_OrderTree_PriceMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Service_OrderTree_PriceMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::protobuf::Service_OrderList,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList > > parser(&price_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, .be.protobuf.Service.Order> order_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Service_OrderTree_OrderMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Service_OrderTree_OrderMapEntry_DoNotUse,
              ::google::protobuf::uint64, ::be::protobuf::Service_Order,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order > > parser(&order_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service.OrderTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service.OrderTree)
  return false;
#undef DO_
}

void Service_OrderTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
  if (!this->price_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->price_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->price_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderTree_PriceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(price_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<Service_OrderTree_PriceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it) {
        entry.reset(price_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint64, .be.protobuf.Service.Order> order_map = 2;
  if (!this->order_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->order_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->order_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderTree_OrderMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(order_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<Service_OrderTree_OrderMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it) {
        entry.reset(order_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service.OrderTree)
}

::google::protobuf::uint8* Service_OrderTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service.OrderTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
  if (!this->price_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->price_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->price_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderTree_PriceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(price_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Service_OrderTree_PriceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
          it = this->price_map().begin();
          it != this->price_map().end(); ++it) {
        entry.reset(price_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint64, .be.protobuf.Service.Order> order_map = 2;
  if (!this->order_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->order_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->order_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Service_OrderTree_OrderMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(order_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Service_OrderTree_OrderMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_iterator
          it = this->order_map().begin();
          it != this->order_map().end(); ++it) {
        entry.reset(order_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service.OrderTree)
  return target;
}

size_t Service_OrderTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service.OrderTree)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, .be.protobuf.Service.OrderList> price_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->price_map_size());
  {
    ::std::unique_ptr<Service_OrderTree_PriceMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_OrderList >::const_iterator
        it = this->price_map().begin();
        it != this->price_map().end(); ++it) {
      entry.reset(price_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint64, .be.protobuf.Service.Order> order_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->order_map_size());
  {
    ::std::unique_ptr<Service_OrderTree_OrderMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::be::protobuf::Service_Order >::const_iterator
        it = this->order_map().begin();
        it != this->order_map().end(); ++it) {
      entry.reset(order_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service_OrderTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service.OrderTree)
  GOOGLE_DCHECK_NE(&from, this);
  const Service_OrderTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service_OrderTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service.OrderTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service.OrderTree)
    MergeFrom(*source);
  }
}

void Service_OrderTree::MergeFrom(const Service_OrderTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service.OrderTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  price_map_.MergeFrom(from.price_map_);
  order_map_.MergeFrom(from.order_map_);
}

void Service_OrderTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service.OrderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service_OrderTree::CopyFrom(const Service_OrderTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service.OrderTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service_OrderTree::IsInitialized() const {
  return true;
}

void Service_OrderTree::Swap(Service_OrderTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service_OrderTree::InternalSwap(Service_OrderTree* other) {
  using std::swap;
  price_map_.Swap(&other->price_map_);
  order_map_.Swap(&other->order_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service_OrderTree::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Service::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Service_2eproto::scc_info_Service.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:be.protobuf.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:be.protobuf.Service)
}

void Service::SharedCtor() {
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:be.protobuf.Service)
  SharedDtor();
}

void Service::SharedDtor() {
}

void Service::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  ::protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service& Service::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Service_2eproto::scc_info_Service.base);
  return *internal_default_instance();
}


void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:be.protobuf.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:be.protobuf.Service)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:be.protobuf.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:be.protobuf.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:be.protobuf.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:be.protobuf.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:be.protobuf.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:be.protobuf.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:be.protobuf.Service)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:be.protobuf.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:be.protobuf.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:be.protobuf.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:be.protobuf.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:be.protobuf.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:be.protobuf.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_Service_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Service_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace be
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_Order* Arena::CreateMaybeMessage< ::be::protobuf::Service_Order >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_Order >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_Quote* Arena::CreateMaybeMessage< ::be::protobuf::Service_Quote >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_Quote >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_QuoteList* Arena::CreateMaybeMessage< ::be::protobuf::Service_QuoteList >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_QuoteList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderList* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderList >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderBook_BidsMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderBook_AsksMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderBook* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderBook >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderBook >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderTree_PriceMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderTree_OrderMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service_OrderTree* Arena::CreateMaybeMessage< ::be::protobuf::Service_OrderTree >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service_OrderTree >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::be::protobuf::Service* Arena::CreateMaybeMessage< ::be::protobuf::Service >(Arena* arena) {
  return Arena::CreateInternal< ::be::protobuf::Service >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
